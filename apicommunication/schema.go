package apicommunication

// ActorInputBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type ActorInputBean struct {
	Group []string `json:"group"`
	User  []string `json:"user"`
}

// ActorsMap is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type ActorsMap struct {
	Group []string `json:"group"`
	User  []string `json:"user"`
}

// AddFieldBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type AddFieldBean struct {
	// FieldID is the The ID of the field to add.
	FieldID string `json:"fieldId"`
}

// AddGroupBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type AddGroupBean struct {
	// Name is the The name of the group.
	Name string `json:"name"`
}

// Application is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The application the linked item is in.
type Application struct {
	// Name is the The name of the application. Used in conjunction with the (remote) object icon title to display a tooltip for the link's icon. The tooltip takes the format "\[application name\] icon title". Blank items are excluded from the tooltip title. If both items are blank, the icon tooltop displays as "Web Link". Grouping and sorting of links may place links without an application name last.
	Name string `json:"name"`
	// Type is the The name-spaced type of the application, used by registered rendering apps.
	Type string `json:"type"`
}

// ApplicationProperty is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of an application property.
type ApplicationProperty struct {
	AllowedValues []string `json:"allowedValues"`
	// DefaultValue is the The default value of the application property.
	DefaultValue string `json:"defaultValue"`
	// Desc is the The description of the application property.
	Desc    string `json:"desc"`
	Example string `json:"example"`
	// ID is the The ID of the application property. The ID and key are the same.
	ID string `json:"id"`
	// Key is the The key of the application property. The ID and key are the same.
	Key string `json:"key"`
	// Name is the The name of the application property.
	Name string `json:"name"`
	// Type is the The data type of the application property.
	Type string `json:"type"`
	// Value is the The new value.
	Value string `json:"value"`
}

// ApplicationRole is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of an application role.
type ApplicationRole struct {
	DefaultGroups []string `json:"defaultGroups"`
	// Defined is the Deprecated.
	Defined           bool     `json:"defined"`
	Groups            []string `json:"groups"`
	HasUnlimitedSeats bool     `json:"hasUnlimitedSeats"`
	// Key is the The key of the application role.
	Key string `json:"key"`
	// Name is the The display name of the application role.
	Name string `json:"name"`
	// NumberOfSeats is the The maximum count of users on your license.
	NumberOfSeats int64 `json:"numberOfSeats"`
	// Platform is the Indicates if the application role belongs to Jira platform (`jira-core`).
	Platform bool `json:"platform"`
	// RemainingSeats is the The count of users remaining on your license.
	RemainingSeats int64 `json:"remainingSeats"`
	// SelectedByDefault is the Determines whether this application role should be selected by default on user creation.
	SelectedByDefault bool `json:"selectedByDefault"`
	// UserCount is the The number of users counting against your license.
	UserCount int64 `json:"userCount"`
	// UserCountDescription is the The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.
	UserCountDescription string `json:"userCountDescription"`
}

// AssociatedItemBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of an item associated with the changed record.
type AssociatedItemBean struct {
	// ID is the The ID of the associated record.
	ID string `json:"id"`
	// Name is the The name of the associated record.
	Name string `json:"name"`
	// ParentID is the The ID of the associated parent record.
	ParentID string `json:"parentId"`
	// ParentName is the The name of the associated parent record.
	ParentName string `json:"parentName"`
	// TypeName is the The type of the associated record.
	TypeName string `json:"typeName"`
}

// Attachment is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about an attachment.
type Attachment struct {
	// Author is the Details of the user who added the attachment.
	Author struct {
		*UserDetails `json:",inline"`
	} `json:"author"`
	// Content is the The content of the attachment.
	Content string `json:"content"`
	// Created is the The datetime the attachment was created.
	Created string `json:"created"`
	// Filename is the The file name of the attachment.
	Filename string `json:"filename"`
	// ID is the The ID of the attachment.
	ID string `json:"id"`
	// MimeType is the The MIME type of the attachment.
	MimeType string `json:"mimeType"`
	// Self is the The URL of the attachment details response.
	Self string `json:"self"`
	// Size is the The size of the attachment.
	Size int64 `json:"size"`
	// Thumbnail is the The URL of a thumbnail representing the attachment.
	Thumbnail string `json:"thumbnail"`
}

// AttachmentArchiveEntry is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type AttachmentArchiveEntry struct {
	AbbreviatedName string `json:"abbreviatedName"`
	EntryIndex      int64  `json:"entryIndex"`
	MediaType       string `json:"mediaType"`
	Name            string `json:"name"`
	Size            int64  `json:"size"`
}

// AttachmentArchiveImpl is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type AttachmentArchiveImpl struct {
	// Entries is the The list of the items included in the archive.
	Entries []AttachmentArchiveEntry `json:"entries"`
	// TotalEntryCount is the The number of items in the archive.
	TotalEntryCount int64 `json:"totalEntryCount"`
}

// AttachmentArchiveItemReadable is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Metadata for an item in an attachment archive.
type AttachmentArchiveItemReadable struct {
	// Index is the The position of the item within the archive.
	Index int64 `json:"index"`
	// Label is the The label for the archive item.
	Label string `json:"label"`
	// MediaType is the The MIME type of the archive item.
	MediaType string `json:"mediaType"`
	// Path is the The path of the archive item.
	Path string `json:"path"`
	// Size is the The size of the archive item.
	Size string `json:"size"`
}

// AttachmentArchiveMetadataReadable is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Metadata for an archive (for example a zip) and its contents.
type AttachmentArchiveMetadataReadable struct {
	// Entries is the The list of the items included in the archive.
	Entries []AttachmentArchiveItemReadable `json:"entries"`
	// ID is the The ID of the attachment.
	ID int64 `json:"id"`
	// MediaType is the The MIME type of the attachment.
	MediaType string `json:"mediaType"`
	// Name is the The name of the archive file.
	Name string `json:"name"`
	// TotalEntryCount is the The number of items included in the archive.
	TotalEntryCount int64 `json:"totalEntryCount"`
}

// AttachmentMetadata is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Metadata for an issue attachment.
type AttachmentMetadata struct {
	// Author is the Details of the user who attached the file.
	Author struct {
		*User `json:",inline"`
	} `json:"author"`
	// Content is the The URL of the attachment.
	Content string `json:"content"`
	// Created is the The datetime the attachment was created.
	Created string `json:"created"`
	// Filename is the The name of the attachment file.
	Filename string `json:"filename"`
	// ID is the The ID of the attachment.
	ID int64 `json:"id"`
	// MimeType is the The MIME type of the attachment.
	MimeType   string                 `json:"mimeType"`
	Properties map[string]interface{} `json:"properties"`
	// Self is the The URL of the attachment metadata details.
	Self string `json:"self"`
	// Size is the The size of the attachment.
	Size int64 `json:"size"`
	// Thumbnail is the The URL of a thumbnail representing the attachment.
	Thumbnail string `json:"thumbnail"`
}

// AttachmentSettings is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of the instance's attachment settings.
type AttachmentSettings struct {
	// Enabled is the Whether the ability to add attachments is enabled.
	Enabled bool `json:"enabled"`
	// UploadLimit is the The maximum size of attachments permitted, in bytes.
	UploadLimit int64 `json:"uploadLimit"`
}

// AuditRecordBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// An audit record.
type AuditRecordBean struct {
	// AssociatedItems is the The list of items associated with the changed record.
	AssociatedItems []AssociatedItemBean `json:"associatedItems"`
	// AuthorKey is the Deprecated, use `authorAccountId` instead. The key of the user who created the audit record.
	AuthorKey string `json:"authorKey"`
	// Category is the The category of the audit record. For a list of these categories, see the help article [Auditing in Jira applications](https://confluence.atlassian.com/x/noXKM).
	Category string `json:"category"`
	// ChangedValues is the The list of values changed in the record event.
	ChangedValues []ChangedValueBean `json:"changedValues"`
	// Created is the The date and time on which the audit record was created.
	Created string `json:"created"`
	// Description is the The description of the audit record.
	Description string `json:"description"`
	// EventSource is the The event the audit record originated from.
	EventSource string `json:"eventSource"`
	// ID is the The ID of the audit record.
	ID         int64              `json:"id"`
	ObjectItem AssociatedItemBean `json:"objectItem"`
	// RemoteAddress is the The URL of the computer where the creation of the audit record was initiated.
	RemoteAddress string `json:"remoteAddress"`
	// Summary is the The summary of the audit record.
	Summary string `json:"summary"`
}

// AuditRecords is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Container for a list of audit records.
type AuditRecords struct {
	// Limit is the The requested or default limit on the number of audit items to be returned.
	Limit int64 `json:"limit"`
	// Offset is the The number of audit items skipped before the first item in this list.
	Offset int64 `json:"offset"`
	// Records is the The list of audit items.
	Records []AuditRecordBean `json:"records"`
	// Total is the The total number of audit items returned.
	Total int64 `json:"total"`
}

// AutoCompleteSuggestion is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A field auto-complete suggestion.
type AutoCompleteSuggestion struct {
	// DisplayName is the The display name of a suggested item. If `fieldValue` or `predicateValue` are provided, the matching text is highlighted with the HTML bold tag.
	DisplayName string `json:"displayName"`
	// Value is the The value of a suggested item.
	Value string `json:"value"`
}

// AutoCompleteSuggestions is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The results from a JQL query.
type AutoCompleteSuggestions struct {
	// Results is the The list of suggested item.
	Results []AutoCompleteSuggestion `json:"results"`
}

// Avatar is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of an avatar.
type Avatar struct {
	// FileName is the The file name of the avatar icon. Returned for system avatars.
	FileName string `json:"fileName"`
	// ID is the The ID of the avatar.
	ID string `json:"id"`
	// IsDeletable is the Whether the avatar can be deleted.
	IsDeletable bool `json:"isDeletable"`
	// IsSelected is the Whether the avatar is used in Jira. For example, shown as a project's avatar.
	IsSelected bool `json:"isSelected"`
	// IsSystemAvatar is the Whether the avatar is a system avatar.
	IsSystemAvatar bool `json:"isSystemAvatar"`
	// Owner is the The owner of the avatar. For a system avatar the owner is null (and nothing is returned). For non-system avatars this is the appropriate identifier, such as the ID for a project or the account ID for a user.
	Owner string `json:"owner"`
	URLs  string `json:"urls"`
}

// AvatarUrlsBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type AvatarUrlsBean struct {
	// N16x16 is the The URL of the item's 16x16 pixel avatar.
	N16x16 string `json:"16x16"`
	// N24x24 is the The URL of the item's 24x24 pixel avatar.
	N24x24 string `json:"24x24"`
	// N32x32 is the The URL of the item's 32x32 pixel avatar.
	N32x32 string `json:"32x32"`
	// N48x48 is the The URL of the item's 48x48 pixel avatar.
	N48x48 string `json:"48x48"`
}

// Avatars is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about system and custom avatars.
type Avatars struct {
	// Custom is the Custom avatars list.
	Custom []Avatar `json:"custom"`
	// System is the System avatars list.
	System []Avatar `json:"system"`
}

// BulkCreateCustomFieldOptionRequest is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of options to create for a custom field.
type BulkCreateCustomFieldOptionRequest struct {
	// Options is the Details of options to create.
	Options []CustomFieldOptionValue `json:"options"`
}

// BulkCustomFieldOptionCreateRequest is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of the options to create for a custom field.
type BulkCustomFieldOptionCreateRequest struct {
	// Options is the Details of options to create.
	Options []CustomFieldOptionCreate `json:"options"`
}

// BulkIssuePropertyUpdateRequest is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Bulk issue property update request details.
type BulkIssuePropertyUpdateRequest struct {
	// Filter is the The bulk operation filter.
	Filter struct {
		*IssueFilterForBulkPropertySet `json:",inline"`
	} `json:"filter"`
	// Value is the The value of the property. The value must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.
	Value interface{} `json:"value"`
}

// BulkOperationErrorResult is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type BulkOperationErrorResult struct {
	ElementErrors       ErrorCollection `json:"elementErrors"`
	FailedElementNumber int64           `json:"failedElementNumber"`
	Status              int64           `json:"status"`
}

// BulkPermissionGrants is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of global and project permissions granted to the user.
type BulkPermissionGrants struct {
	GlobalPermissions []string `json:"globalPermissions"`
	// ProjectPermissions is the List of project permissions and the projects and issues those permissions provide access to.
	ProjectPermissions []BulkProjectPermissionGrants `json:"projectPermissions"`
}

// BulkPermissionsRequestBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of global permissions to look up and project permissions with associated projects and issues to look up.
type BulkPermissionsRequestBean struct {
	// AccountID is the The account ID of a user.
	AccountID         string   `json:"accountId"`
	GlobalPermissions []string `json:"globalPermissions"`
	// ProjectPermissions is the Project permissions with associated projects and issues to look up.
	ProjectPermissions []BulkProjectPermissions `json:"projectPermissions"`
}

// BulkProjectPermissionGrants is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// List of project permissions and the projects and issues those permissions grant access to.
type BulkProjectPermissionGrants struct {
	Issues []int64 `json:"issues"`
	// Permission is the A project permission,
	Permission string  `json:"permission"`
	Projects   []int64 `json:"projects"`
}

// BulkProjectPermissions is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of project permissions and associated issues and projects to look up.
type BulkProjectPermissions struct {
	Issues      []int64  `json:"issues"`
	Permissions []string `json:"permissions"`
	Projects    []int64  `json:"projects"`
}

// ChangeDetails is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A change item.
type ChangeDetails struct {
	// Field is the The name of the field changed.
	Field string `json:"field"`
	// FieldID is the The ID of the field changed.
	FieldID string `json:"fieldId"`
	// Fieldtype is the The type of the field changed.
	Fieldtype string `json:"fieldtype"`
	// From is the The details of the original value.
	From string `json:"from"`
	// FromString is the The details of the original value as a string.
	FromString string `json:"fromString"`
	// To is the The details of the new value.
	To string `json:"to"`
	// ToString is the The details of the new value as a string.
	ToString string `json:"toString"`
}

// ChangedValueBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of names changed in the record event.
type ChangedValueBean struct {
	// ChangedFrom is the The value of the field before the change.
	ChangedFrom string `json:"changedFrom"`
	// ChangedTo is the The value of the field after the change.
	ChangedTo string `json:"changedTo"`
	// FieldName is the The name of the field changed.
	FieldName string `json:"fieldName"`
}

// ChangedWorklog is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of a changed worklog.
type ChangedWorklog struct {
	// Properties is the Details of properties associated with the change.
	Properties []EntityProperty `json:"properties"`
	// UpdatedTime is the The datetime of the change.
	UpdatedTime int64 `json:"updatedTime"`
	// WorklogID is the The ID of the worklog.
	WorklogID int64 `json:"worklogId"`
}

// ChangedWorklogs is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// List of changed worklogs.
type ChangedWorklogs struct {
	LastPage bool `json:"lastPage"`
	// NextPage is the The URL of the next list of changed worklogs.
	NextPage string `json:"nextPage"`
	// Self is the The URL of this changed worklogs list.
	Self string `json:"self"`
	// Since is the The datetime of the first worklog item in the list.
	Since int64 `json:"since"`
	// Until is the The datetime of the last worklog item in the list.
	Until int64 `json:"until"`
	// Values is the Changed worklog list.
	Values []ChangedWorklog `json:"values"`
}

// Changelog is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A changelog.
type Changelog struct {
	// Author is the The user who made the change.
	Author struct {
		*UserDetails `json:",inline"`
	} `json:"author"`
	// Created is the The date on which the change took place.
	Created string `json:"created"`
	// HistoryMetadata is the The history metadata associated with the changed.
	HistoryMetadata struct {
		*HistoryMetadata `json:",inline"`
	} `json:"historyMetadata"`
	// ID is the The ID of the changelog.
	ID string `json:"id"`
	// Items is the The list of items changed.
	Items []ChangeDetails `json:"items"`
}

// ColumnItem is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of an issue navigator column item.
type ColumnItem struct {
	// Label is the The issue navigator column label.
	Label string `json:"label"`
	// Value is the The issue navigator column value.
	Value string `json:"value"`
}

// Comment is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A comment.
type Comment struct {
	// Author is the The ID of the user who created the comment.
	Author struct {
		*UserDetails `json:",inline"`
	} `json:"author"`
	// Body is the The comment text in [Atlassian Document Format](https://developer.atlassian.com/cloud/jira/platform/apis/document/structure/).
	Body interface{} `json:"body"`
	// Created is the The date and time at which the comment was created.
	Created string `json:"created"`
	// ID is the The ID of the comment.
	ID string `json:"id"`
	// JsdPublic is the Whether the comment is visible in Jira Service Desk. Defaults to true when comments are created in the Jira Cloud Platform. This includes when the site doesn't use Jira Service Desk or the project isn't a Jira Service Desk project and, therefore, there is no Jira Service Desk for the issue to be visible on. To create a comment with its visibility in Jira Service Desk set to false, use the Jira Service Desk REST API [Create request comment](https://developer.atlassian.com/cloud/jira/service-desk/rest/#api-rest-servicedeskapi-request-issueIdOrKey-comment-post) operation.
	JsdPublic bool `json:"jsdPublic"`
	// Properties is the A list of comment properties. Optional on create and update.
	Properties []EntityProperty `json:"properties"`
	// RenderedBody is the The rendered version of the comment.
	RenderedBody string `json:"renderedBody"`
	// Self is the The URL of the comment.
	Self string `json:"self"`
	// UpdateAuthor is the The ID of the user who updated the comment last.
	UpdateAuthor struct {
		*UserDetails `json:",inline"`
	} `json:"updateAuthor"`
	// Updated is the The date and time at which the comment was updated last.
	Updated string `json:"updated"`
	// Visibility is the The group or role to which this comment is visible. Optional on create and update.
	Visibility struct {
		*Visibility `json:",inline"`
	} `json:"visibility"`
}

// Component is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about a project component.
type Component struct {
	// Assignee is the The details of the user associated with `assigneeType`, if any. See `realAssignee` for details of the user assigned to issues created with this component.
	Assignee struct {
		*User `json:",inline"`
	} `json:"assignee"`
	// AssigneeType is the The nominal user type used to determine the assignee for issues created with this component. See `realAssigneeType` for details on how the type of the user, and hence the user, assigned to issues is determined. Can take the following values:
	//
	//  *  `PROJECT_LEAD` the assignee to any issues created with this component is nominally the lead for the project the component is in.
	//  *  `COMPONENT_LEAD` the assignee to any issues created with this component is nominally the lead for the component.
	//  *  `UNASSIGNED` an assignee is not set for issues created with this component.
	//  *  `PROJECT_DEFAULT` the assignee to any issues created with this component is nominally the default assignee for the project that the component is in.
	//
	// Default value: `PROJECT_DEFAULT`.
	// Optional when creating or updating a component.
	AssigneeType string `json:"assigneeType"`
	// Description is the The description for the component. Optional when creating or updating a component.
	Description string `json:"description"`
	// ID is the The unique identifier for the component.
	ID string `json:"id"`
	// IsAssigneeTypeValID is the Whether a user is associated with `assigneeType`. For example, if the `assigneeType` is set to `COMPONENT_LEAD` but the component lead is not set, then `false` is returned.
	IsAssigneeTypeValID bool `json:"isAssigneeTypeValid"`
	// Lead is the The user details for the component's lead user.
	Lead struct {
		*User `json:",inline"`
	} `json:"lead"`
	// LeadAccountID is the The accountId of the component's lead user. The accountId uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
	LeadAccountID string `json:"leadAccountId"`
	// LeadUserName is the This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
	LeadUserName string `json:"leadUserName"`
	// Name is the The unique name for the component in the project. Required when creating a component. Optional when updating a component. The maximum length is 255 characters.
	Name string `json:"name"`
	// Project is the The key of the project the component is assigned to. Required when creating a component. Can't be updated.
	Project string `json:"project"`
	// ProjectID is the The ID of the project the component is assigned to.
	ProjectID int64 `json:"projectId"`
	// RealAssignee is the The user assigned to issues created with this component, when `assigneeType` does not identify a valid assignee.
	RealAssignee struct {
		*User `json:",inline"`
	} `json:"realAssignee"`
	// RealAssigneeType is the The type of the assignee that is assigned to issues created with this component, when an assignee cannot be set from the `assigneeType`. For example, `assigneeType` is set to `COMPONENT_LEAD` but no component lead is set. This property is set to one of the following values:
	//
	//  *  `PROJECT_LEAD` when `assigneeType` is `PROJECT_LEAD` and the project lead has permission to be assigned issues in the project that the component is in.
	//  *  `COMPONENT_LEAD` when `assignee`Type is `COMPONENT_LEAD` and the component lead has permission to be assigned issues in the project that the component is in.
	//  *  `UNASSIGNED` when `assigneeType` is `UNASSIGNED` and Jira is configured to allow unassigned issues.
	//  *  `PROJECT_DEFAULT` when none of the preceding cases are true.
	RealAssigneeType string `json:"realAssigneeType"`
	// Self is the The URL of the component.
	Self string `json:"self"`
}

// ComponentIssuesCount is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Count of issues assigned to a component.
type ComponentIssuesCount struct {
	// IssueCount is the The count of issues assigned to a component.
	IssueCount int64 `json:"issueCount"`
	// Self is the The URL for this count of issues for a component.
	Self string `json:"self"`
}

// ComponentWithIssueCount is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about a component with a count of the issues it contains.
type ComponentWithIssueCount struct {
	// Assignee is the The details of the user associated with `assigneeType`, if any. See `realAssignee` for details of the user assigned to issues created with this component.
	Assignee struct {
		*User `json:",inline"`
	} `json:"assignee"`
	// AssigneeType is the The nominal user type used to determine the assignee for issues created with this component. See `realAssigneeType` for details on how the type of the user, and hence the user, assigned to issues is determined. Takes the following values:
	//
	//  *  `PROJECT_LEAD` the assignee to any issues created with this component is nominally the lead for the project the component is in.
	//  *  `COMPONENT_LEAD` the assignee to any issues created with this component is nominally the lead for the component.
	//  *  `UNASSIGNED` an assignee is not set for issues created with this component.
	//  *  `PROJECT_DEFAULT` the assignee to any issues created with this component is nominally the default assignee for the project that the component is in.
	AssigneeType string `json:"assigneeType"`
	// Description is the The description for the component.
	Description string `json:"description"`
	// ID is the The unique identifier for the component.
	ID string `json:"id"`
	// IsAssigneeTypeValID is the Whether a user is associated with `assigneeType`. For example, if the `assigneeType` is set to `COMPONENT_LEAD` but the component lead is not set, then `false` is returned.
	IsAssigneeTypeValID bool `json:"isAssigneeTypeValid"`
	// IssueCount is the Count of issues for the component.
	IssueCount int64 `json:"issueCount"`
	// Lead is the The user details for the component's lead user.
	Lead struct {
		*User `json:",inline"`
	} `json:"lead"`
	// Name is the The name for the component.
	Name string `json:"name"`
	// Project is the The key of the project to which the component is assigned.
	Project string `json:"project"`
	// ProjectID is the Not used.
	ProjectID int64 `json:"projectId"`
	// RealAssignee is the The user assigned to issues created with this component, when `assigneeType` does not identify a valid assignee.
	RealAssignee struct {
		*User `json:",inline"`
	} `json:"realAssignee"`
	// RealAssigneeType is the The type of the assignee that is assigned to issues created with this component, when an assignee cannot be set from the `assigneeType`. For example, `assigneeType` is set to `COMPONENT_LEAD` but no component lead is set. This property is set to one of the following values:
	//
	//  *  `PROJECT_LEAD` when `assigneeType` is `PROJECT_LEAD` and the project lead has permission to be assigned issues in the project that the component is in.
	//  *  `COMPONENT_LEAD` when `assignee`Type is `COMPONENT_LEAD` and the component lead has permission to be assigned issues in the project that the component is in.
	//  *  `UNASSIGNED` when `assigneeType` is `UNASSIGNED` and Jira is configured to allow unassigned issues.
	//  *  `PROJECT_DEFAULT` when none of the preceding cases are true.
	RealAssigneeType string `json:"realAssigneeType"`
	// Self is the The URL for this count of the issues contained in the component.
	Self string `json:"self"`
}

// CompoundClause is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A JQL query clause that consists of nested clauses. For example, `(labels in (urgent, blocker) OR lastCommentedBy = currentUser()). Note that, where nesting is not defined, the parser nests JQL clauses based on the operator precedence. For example, "A OR B AND C" is parsed as "(A OR B) AND C". See Setting the precedence of operators for more information about precedence in JQL queries.`
type CompoundClause struct {
	// Clauses is the The list of nested clauses.
	Clauses []JqlQueryClause `json:"clauses"`
	// Operator is the The operator between the clauses.
	Operator string `json:"operator"`
}

// Configuration is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about the configuration of Jira.
type Configuration struct {
	// AttachmentsEnabled is the Whether the ability to add attachments to issues is enabled.
	AttachmentsEnabled bool `json:"attachmentsEnabled"`
	// IssueLinkingEnabled is the Whether the ability to link issues is enabled.
	IssueLinkingEnabled bool `json:"issueLinkingEnabled"`
	// SubTasksEnabled is the Whether the ability to create subtasks for issues is enabled.
	SubTasksEnabled bool `json:"subTasksEnabled"`
	// TimeTrackingConfiguration is the The configuration of time tracking.
	TimeTrackingConfiguration struct {
		*TimeTrackingConfiguration `json:",inline"`
	} `json:"timeTrackingConfiguration"`
	// TimeTrackingEnabled is the Whether the ability to track time is enabled. This property is deprecated.
	TimeTrackingEnabled bool `json:"timeTrackingEnabled"`
	// UnassignedIssuesAllowed is the Whether the ability to create unassigned issues is enabled. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.
	UnassignedIssuesAllowed bool `json:"unassignedIssuesAllowed"`
	// VotingEnabled is the Whether the ability for users to vote on issues is enabled. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.
	VotingEnabled bool `json:"votingEnabled"`
	// WatchingEnabled is the Whether the ability for users to watch issues is enabled. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.
	WatchingEnabled bool `json:"watchingEnabled"`
}

// ConnectModule is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A [Connect module](https://developer.atlassian.com/cloud/jira/platform/about-jira-modules/) in the same format as in the
// [app descriptor](https://developer.atlassian.com/cloud/jira/platform/app-descriptor/).
type ConnectModule struct {
}

// ConnectModules is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type ConnectModules struct {
	// Modules is the A list of app modules in the same format as the `modules` property in the
	// [app descriptor](https://developer.atlassian.com/cloud/jira/platform/app-descriptor/).
	Modules []ConnectModule `json:"modules"`
}

// ConnectWorkflowTransitionRule is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A workflow transition rule.
type ConnectWorkflowTransitionRule struct {
	Configuration RuleConfiguration `json:"configuration"`
	// ID is the The ID of the transition rule.
	ID string `json:"id"`
	// Key is the The key of the rule, as defined in the Connect app descriptor.
	Key        string `json:"key"`
	Transition struct {
		*WorkflowTransition `json:",inline"`
	} `json:"transition"`
}

// ContainerForRegisteredWebhooks is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Container for a list of registered webhooks. Webhook details are returned in the same order as the request.
type ContainerForRegisteredWebhooks struct {
	// WebhookRegistrationResult is the A list of registered webhooks.
	WebhookRegistrationResult []RegisteredWebhook `json:"webhookRegistrationResult"`
}

// ContainerForWebhookIDs is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Container for a list of webhook IDs.
type ContainerForWebhookIDs struct {
	// WebhookIds is the A list of webhook IDs.
	WebhookIds []int64 `json:"webhookIds"`
}

// ContainerOfWorkflowSchemeAssociations is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A container for a list of workflow schemes together with the projects they are associated with.
type ContainerOfWorkflowSchemeAssociations struct {
	// Values is the A list of workflow schemes together with projects they are associated with.
	Values []WorkflowSchemeAssociations `json:"values"`
}

// Context is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A context.
type Context struct {
	// ID is the The ID of the context.
	ID int64 `json:"id"`
	// Name is the The name of the context.
	Name string `json:"name"`
	// Scope is the The scope of the context.
	Scope struct {
		*Scope `json:",inline"`
	} `json:"scope"`
}

// ConvertedJQLQueries is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The converted JQL queries.
type ConvertedJQLQueries struct {
	// QueriesWithUnknownUsers is the List of queries containing user information that could not be mapped to an existing user
	QueriesWithUnknownUsers []JQLQueryWithUnknownUsers `json:"queriesWithUnknownUsers"`
	QueryStrings            []string                   `json:"queryStrings"`
}

// CreateUpdateRoleRequestBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type CreateUpdateRoleRequestBean struct {
	// Description is the A description of the project role. Required when fully updating a project role. Optional when creating or partially updating a project role.
	Description string `json:"description"`
	// Name is the The name of the project role. Must be unique. Cannot begin or end with whitespace. The maximum length is 255 characters. Required when creating a project role. Optional when partially updating a project role.
	Name string `json:"name"`
}

// CreatedIssue is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about a created issue or subtask.
type CreatedIssue struct {
	// ID is the The ID of the created issue or subtask.
	ID string `json:"id"`
	// Key is the The key of the created issue or subtask.
	Key string `json:"key"`
	// Self is the The URL of the created issue or subtask.
	Self string `json:"self"`
	// Transition is the The response code and messages related to any requested transition.
	Transition struct {
		*NestedResponse `json:",inline"`
	} `json:"transition"`
}

// CreatedIssues is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about the issues created and the errors for requests that failed.
type CreatedIssues struct {
	// Errors is the Error details for failed issue creation requests.
	Errors []BulkOperationErrorResult `json:"errors"`
	// Issues is the Details of the issues created.
	Issues []CreatedIssue `json:"issues"`
}

// CustomFieldContext is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The details of a custom field context.
type CustomFieldContext struct {
	// Description is the The description of the context.
	Description string `json:"description"`
	// ID is the The ID of the context.
	ID           string   `json:"id"`
	IssueTypeIds []string `json:"issueTypeIds"`
	// Name is the The name of the context.
	Name       string   `json:"name"`
	ProjectIds []string `json:"projectIds"`
}

// CustomFieldContextOption is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of the custom field options for a context.
type CustomFieldContextOption struct {
	// Disabled is the Whether the option is disabled.
	Disabled bool `json:"disabled"`
	// ID is the The ID of the custom field option.
	ID string `json:"id"`
	// OptionID is the For cascading options, the ID of the custom field option containing the cascading option.
	OptionID string `json:"optionId"`
	// Value is the The value of the custom field option.
	Value string `json:"value"`
}

// CustomFieldContextOptionsList is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A list of custom field options for a context.
type CustomFieldContextOptionsList struct {
	// Options is the The created custom field options.
	Options []CustomFieldContextOption `json:"options"`
}

// CustomFieldDefinitionJsonBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type CustomFieldDefinitionJsonBean struct {
	// Description is the The description of the custom field, which is displayed in Jira.
	Description string `json:"description"`
	// Name is the The name of the custom field, which is displayed in Jira. This is not the unique identifier.
	Name string `json:"name"`
	// SearcherKey is the The searcher defines the way the field is searched in Jira. For example, *com.atlassian.jira.plugin.system.customfieldtypes:grouppickersearcher*.
	// The search UI (basic search and JQL search) will display different operations and values for the field, based on the field searcher. You must specify a searcher that is valid for the field type, as listed below (abbreviated values shown):
	//
	//  *  `cascadingselect`: `cascadingselectsearcher`
	//  *  `datepicker`: `daterange`
	//  *  `datetime`: `datetimerange`
	//  *  `float`: `exactnumber` or `numberrange`
	//  *  `grouppicker`: `grouppickersearcher`
	//  *  `importid`: `exactnumber` or `numberrange`
	//  *  `labels`: `labelsearcher`
	//  *  `multicheckboxes`: `multiselectsearcher`
	//  *  `multigrouppicker`: `multiselectsearcher`
	//  *  `multiselect`: `multiselectsearcher`
	//  *  `multiuserpicker`: `userpickergroupsearcher`
	//  *  `multiversion`: `versionsearcher`
	//  *  `project`: `projectsearcher`
	//  *  `radiobuttons`: `multiselectsearcher`
	//  *  `readonlyfield`: `textsearcher`
	//  *  `select`: `multiselectsearcher`
	//  *  `textarea`: `textsearcher`
	//  *  `textfield`: `textsearcher`
	//  *  `url`: `exacttextsearcher`
	//  *  `userpicker`: `userpickergroupsearcher`
	//  *  `version`: `versionsearcher`
	SearcherKey string `json:"searcherKey"`
	// Type is the The type of the custom field. For example, *com.atlassian.jira.plugin.system.customfieldtypes:grouppicker*.
	//
	//  *  `cascadingselect`: Allows multiple values to be selected using two select lists
	//  *  `datepicker`: Stores a date using a picker control
	//  *  `datetime`: Stores a date with a time component
	//  *  `float`: Stores and validates a numeric (floating point) input
	//  *  `grouppicker`: Stores a user group using a picker control
	//  *  `importid`: A read-only field that stores the previous ID of the issue from the system that it was imported from
	//  *  `labels`: Stores labels
	//  *  `multicheckboxes`: Stores multiple values using checkboxes
	//  *  `multigrouppicker`: Stores multiple user groups using a picker control
	//  *  `multiselect`: Stores multiple values using a select list
	//  *  `multiuserpicker`: Stores multiple users using a picker control
	//  *  `multiversion`: Stores multiple versions from the versions available in a project using a picker control
	//  *  `project`: Stores a project from a list of projects that the user is permitted to view
	//  *  `radiobuttons`: Stores a value using radio buttons
	//  *  `readonlyfield`: Stores a read-only text value, which can only be populated via the API
	//  *  `select`: Stores a value from a configurable list of options
	//  *  `textarea`: Stores a long text string using a multiline text area
	//  *  `textfield`: Stores a text string using a single-line text box
	//  *  `url`: Stores a URL
	//  *  `userpicker`: Stores a user using a picker control
	//  *  `version`: Stores a version using a picker control
	Type string `json:"type"`
}

// CustomFieldOption is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of a custom option for a field.
type CustomFieldOption struct {
	// Self is the The URL of these custom field option details.
	Self string `json:"self"`
	// Value is the The value of the custom field option.
	Value string `json:"value"`
}

// CustomFieldOptionCreate is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of a custom field option to create.
type CustomFieldOptionCreate struct {
	// Disabled is the Whether the option is disabled.
	Disabled bool `json:"disabled"`
	// OptionID is the For cascading options, the ID of the custom field object containing the cascading option.
	OptionID string `json:"optionId"`
	// Value is the The value of the custom field option.
	Value string `json:"value"`
}

// CustomFieldOptionDetails is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of a custom field option and its cascading options.
type CustomFieldOptionDetails struct {
	CascadingOptions []string `json:"cascadingOptions"`
	// ID is the The ID of the custom field option.
	ID int64 `json:"id"`
	// Value is the The value of the custom field option.
	Value string `json:"value"`
}

// CustomFieldOptionValue is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Value of a custom field option and the values of its cascading options.
type CustomFieldOptionValue struct {
	CascadingOptions []string `json:"cascadingOptions"`
	// Value is the The value of the custom field option.
	Value string `json:"value"`
}

// CustomFieldReplacement is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about the replacement for a deleted version.
type CustomFieldReplacement struct {
	// CustomFieldID is the The ID of the custom field in which to replace the version number.
	CustomFieldID int64 `json:"customFieldId"`
	// MoveTo is the The version number to use as a replacement for the deleted version.
	MoveTo int64 `json:"moveTo"`
}

// Dashboard is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of a dashboard.
type Dashboard struct {
	Description string `json:"description"`
	// ID is the The ID of the dashboard.
	ID string `json:"id"`
	// IsFavourite is the Whether the dashboard is selected as a favorite by the user.
	IsFavourite bool `json:"isFavourite"`
	// Name is the The name of the dashboard.
	Name string `json:"name"`
	// Owner is the The owner of the dashboard.
	Owner struct {
		*UserBean `json:",inline"`
	} `json:"owner"`
	// Popularity is the The number of users who have this dashboard as a favorite.
	Popularity int64 `json:"popularity"`
	// Rank is the The rank of this dashboard.
	Rank int64 `json:"rank"`
	// Self is the The URL of these dashboard details.
	Self string `json:"self"`
	// SharePermissions is the The details of any share permissions for the dashboard.
	SharePermissions []SharePermission `json:"sharePermissions"`
	// View is the The URL of the dashboard.
	View string `json:"view"`
}

// DashboardDetails is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of a dashboard.
type DashboardDetails struct {
	// Description is the The description of the dashboard.
	Description string `json:"description"`
	// Name is the The name of the dashboard.
	Name string `json:"name"`
	// SharePermissions is the The details of any share permissions for the dashboard.
	SharePermissions []SharePermission `json:"sharePermissions"`
}

// DefaultShareScope is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of the scope of the default sharing for new filters and dashboards.
type DefaultShareScope struct {
	// Scope is the The scope of the default sharing for new filters and dashboards:
	//
	//  *  `AUTHENTICATED` Shared with all logged-in users.
	//  *  `GLOBAL` Shared with all logged-in users. This shows as `AUTHENTICATED` in the response.
	//  *  `PRIVATE` Not shared with any users.
	Scope string `json:"scope"`
}

// DefaultWorkflow is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about the default workflow.
type DefaultWorkflow struct {
	// UpdateDraftIfNeeded is the Whether a draft workflow scheme is created or updated when updating an active workflow scheme. The draft is updated with the new default workflow. Defaults to `false`.
	UpdateDraftIfNeeded bool `json:"updateDraftIfNeeded"`
	// Workflow is the The name of the workflow to set as the default workflow.
	Workflow string `json:"workflow"`
}

// DeleteAndReplaceVersionBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type DeleteAndReplaceVersionBean struct {
	// CustomFieldReplacementList is the An array of custom field IDs (`customFieldId`) and version IDs (`moveTo`) to update when the fields contain the deleted version.
	CustomFieldReplacementList []CustomFieldReplacement `json:"customFieldReplacementList"`
	// MoveAffectedIssuesTo is the The ID of the version to update `affectedVersion` to when the field contains the deleted version.
	MoveAffectedIssuesTo int64 `json:"moveAffectedIssuesTo"`
	// MoveFixIssuesTo is the The ID of the version to update `fixVersion` to when the field contains the deleted version.
	MoveFixIssuesTo int64 `json:"moveFixIssuesTo"`
}

// DeprecatedWorkflow is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about a workflow.
type DeprecatedWorkflow struct {
	Default bool `json:"default"`
	// Description is the The description of the workflow.
	Description string `json:"description"`
	// LastModifiedDate is the The datetime the workflow was last modified.
	LastModifiedDate string `json:"lastModifiedDate"`
	// LastModifiedUser is the This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
	LastModifiedUser string `json:"lastModifiedUser"`
	// LastModifiedUserAccountID is the The account ID of the user that last modified the workflow.
	LastModifiedUserAccountID string `json:"lastModifiedUserAccountId"`
	// Name is the The name of the workflow.
	Name string `json:"name"`
	// Scope is the The scope where this workflow applies
	Scope struct {
		*Scope `json:",inline"`
	} `json:"scope"`
	// Steps is the The number of steps included in the workflow.
	Steps int64 `json:"steps"`
}

// EntityProperty is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// An entity property, for more information see [Entity properties](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).
type EntityProperty struct {
	// Key is the The key of the property. Required on create and update.
	Key string `json:"key"`
	// Value is the The value of the property. Required on create and update.
	Value interface{} `json:"value"`
}

// ErrorCollection is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Error messages from an operation.
type ErrorCollection struct {
	ErrorMessages []string `json:"errorMessages"`
	Errors        string   `json:"errors"`
	Status        int64    `json:"status"`
}

// ErrorMessage is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type ErrorMessage struct {
	// Message is the The error message.
	Message string `json:"message"`
}

// EventNotification is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about a notification associated with an event.
type EventNotification struct {
	// EmailAddress is the The email address.
	EmailAddress string `json:"emailAddress"`
	// Expand is the Expand options that include additional event notification details in the response.
	Expand string `json:"expand"`
	// Field is the The custom user or group field.
	Field struct {
		*FieldDetails `json:",inline"`
	} `json:"field"`
	// Group is the The specified group.
	Group struct {
		*GroupName `json:",inline"`
	} `json:"group"`
	// ID is the The ID of the notification.
	ID int64 `json:"id"`
	// NotificationType is the Identifies the recipients of the notification.
	NotificationType string `json:"notificationType"`
	// Parameter is the The value of the `notificationType`:
	//
	//  *  `User` The `parameter` is the user account ID.
	//  *  `Group` The `parameter` is the group name.
	//  *  `ProjectRole` The `parameter` is the project role ID.
	//  *  `UserCustomField` The `parameter` is the ID of the custom field.
	//  *  `GroupCustomField` The `parameter` is the ID of the custom field.
	Parameter string `json:"parameter"`
	// ProjectRole is the The specified project role.
	ProjectRole struct {
		*ProjectRole `json:",inline"`
	} `json:"projectRole"`
	// User is the The specified user.
	User struct {
		*UserDetails `json:",inline"`
	} `json:"user"`
}

// FailedWebhook is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about a failed webhook.
type FailedWebhook struct {
	// Body is the The webhook body.
	Body string `json:"body"`
	// FailureTime is the The time the webhook was added to the list of failed webhooks (that is, the time of the last failed retry).
	FailureTime int64 `json:"failureTime"`
	// ID is the The webhook ID, as sent in the `X-Atlassian-Webhook-Identifier` header with the webhook.
	ID string `json:"id"`
	// URL is the The original webhook destination.
	URL string `json:"url"`
}

// FailedWebhooks is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of failed webhooks.
type FailedWebhooks struct {
	// MaxResults is the The maximum number of items on the page. If the list of values is shorter than this number, then there are no more pages.
	MaxResults int64 `json:"maxResults"`
	// Next is the The URL to the next page of results. Present only if the request returned at least one result.The next page may be empty at the time of receiving the response, but new failed webhooks may appear in time. You can save the URL to the next page and query for new results periodically (for example, every hour).
	Next string `json:"next"`
	// Values is the The list of webhooks.
	Values []FailedWebhook `json:"values"`
}

// Field is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of a field.
type Field struct {
	// ContextsCount is the Number of contexts where the field is used.
	ContextsCount int64 `json:"contextsCount"`
	// Description is the The description of the field.
	Description string `json:"description"`
	// ID is the The ID of the field.
	ID string `json:"id"`
	// IsLocked is the Whether the field is locked.
	IsLocked bool `json:"isLocked"`
	// Key is the The key of the field.
	Key      string        `json:"key"`
	LastUsed FieldLastUsed `json:"lastUsed"`
	// Name is the The name of the field.
	Name   string       `json:"name"`
	Schema JsonTypeBean `json:"schema"`
	// ScreensCount is the Number of screens where the field is used.
	ScreensCount int64 `json:"screensCount"`
}

// FieldChangedClause is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A clause that asserts whether a field was changed. For example, `status CHANGED AFTER startOfMonth(-1M)`.See [CHANGED](https://confluence.atlassian.com/x/dgiiLQ#Advancedsearching-operatorsreference-CHANGEDCHANGED) for more information about the CHANGED operator.
type FieldChangedClause struct {
	Field JqlQueryField `json:"field"`
	// Operator is the The operator applied to the field.
	Operator string `json:"operator"`
	// Predicates is the The list of time predicates.
	Predicates []JqlQueryClauseTimePredicate `json:"predicates"`
}

// FieldConfiguration is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of a field configuration.
type FieldConfiguration struct {
	// Description is the The description of the field configuration.
	Description string `json:"description"`
	// ID is the The ID of the field configuration.
	ID int64 `json:"id"`
	// IsDefault is the Whether the field configuration is the default.
	IsDefault bool `json:"isDefault"`
	// Name is the The name of the field configuration.
	Name string `json:"name"`
}

// FieldConfigurationIssueTypeItem is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The field configuration for an issue type.
type FieldConfigurationIssueTypeItem struct {
	// FieldConfigurationID is the The ID of the field configuration.
	FieldConfigurationID string `json:"fieldConfigurationId"`
	// FieldConfigurationSchemeID is the The ID of the field configuration scheme.
	FieldConfigurationSchemeID string `json:"fieldConfigurationSchemeId"`
	// IssueTypeID is the The ID of the issue type or *default*. When set to *default* this field configuration issue type item applies to all issue types without a field configuration.
	IssueTypeID string `json:"issueTypeId"`
}

// FieldConfigurationItem is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A field within a field configuration.
type FieldConfigurationItem struct {
	// Description is the The description of the field within the field configuration.
	Description string `json:"description"`
	// ID is the The ID of the field within the field configuration.
	ID string `json:"id"`
	// IsHidden is the Whether the field is hidden in the field configuration.
	IsHidden bool `json:"isHidden"`
	// IsRequired is the Whether the field is required in the field configuration.
	IsRequired bool `json:"isRequired"`
}

// FieldConfigurationScheme is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of a field configuration scheme.
type FieldConfigurationScheme struct {
	// Description is the The description of the field configuration scheme.
	Description string `json:"description"`
	// ID is the The ID of the field configuration scheme.
	ID string `json:"id"`
	// Name is the The name of the field configuration scheme.
	Name string `json:"name"`
}

// FieldConfigurationSchemeProjectAssociation is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Associated field configuration scheme and project.
type FieldConfigurationSchemeProjectAssociation struct {
	// FieldConfigurationSchemeID is the The ID of the field configuration scheme. If the field configuration scheme ID is `null`, the operation assigns the default field configuration scheme.
	FieldConfigurationSchemeID string `json:"fieldConfigurationSchemeId"`
	// ProjectID is the The ID of the project.
	ProjectID string `json:"projectId"`
}

// FieldConfigurationSchemeProjects is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Project list with assigned field configuration schema.
type FieldConfigurationSchemeProjects struct {
	FieldConfigurationScheme FieldConfigurationScheme `json:"fieldConfigurationScheme"`
	// ProjectIds is the The IDs of projects using the field configuration scheme.
	ProjectIds []string `json:"projectIds"`
}

// FieldDetails is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about a field.
type FieldDetails struct {
	ClauseNames []string `json:"clauseNames"`
	// Custom is the Whether the field is a custom field.
	Custom bool `json:"custom"`
	// ID is the The ID of the field.
	ID string `json:"id"`
	// Key is the The key of the field.
	Key string `json:"key"`
	// Name is the The name of the field.
	Name string `json:"name"`
	// Navigable is the Whether the field can be used as a column on the issue navigator.
	Navigable bool `json:"navigable"`
	// Orderable is the Whether the content of the field can be used to order lists.
	Orderable bool `json:"orderable"`
	// Schema is the The data schema for the field.
	Schema struct {
		*JsonTypeBean `json:",inline"`
	} `json:"schema"`
	// Scope is the The scope of the field.
	Scope struct {
		*Scope `json:",inline"`
	} `json:"scope"`
	// Searchable is the Whether the content of the field can be searched.
	Searchable bool `json:"searchable"`
}

// FieldLastUsed is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Information about the most recent use of a field.
type FieldLastUsed struct {
	// Type is the Last used value type:
	//
	//  *  *TRACKED*: field is tracked and a last used date is available.
	//  *  *NOT\_TRACKED*: field is not tracked, last used date is not available.
	//  *  *NO\_INFORMATION*: field is tracked, but no last used date is available.
	Type string `json:"type"`
	// Value is the The date when the value of the field last changed.
	Value string `json:"value"`
}

// FieldMetadata is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The metadata describing an issue field.
type FieldMetadata struct {
	AllowedValues []interface{} `json:"allowedValues"`
	// AutoCompleteURL is the The URL that can be used to automatically complete the field.
	AutoCompleteURL string `json:"autoCompleteUrl"`
	// DefaultValue is the The default value of the field.
	DefaultValue interface{} `json:"defaultValue"`
	// HasDefaultValue is the Whether the field has a default value.
	HasDefaultValue bool `json:"hasDefaultValue"`
	// Key is the The key of the field.
	Key string `json:"key"`
	// Name is the The name of the field.
	Name       string   `json:"name"`
	Operations []string `json:"operations"`
	// Required is the Whether the field is required.
	Required bool `json:"required"`
	// Schema is the The data type of the field.
	Schema struct {
		*JsonTypeBean `json:",inline"`
	} `json:"schema"`
}

// FieldReferenceData is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of a field that can be used in advanced searches.
type FieldReferenceData struct {
	// Auto is the Whether the field provide auto-complete suggestions.
	Auto string `json:"auto"`
	// CfID is the If the item is a custom field, the ID of the custom field.
	CfID string `json:"cfid"`
	// DisplayName is the The display name of the field.
	DisplayName string   `json:"displayName"`
	Operators   []string `json:"operators"`
	// Orderable is the Whether the field can be used in a query's `ORDER BY` clause.
	Orderable string `json:"orderable"`
	// Searchable is the Whether the content of this field can be searched.
	Searchable string   `json:"searchable"`
	Types      []string `json:"types"`
	// Value is the The field identifier.
	Value string `json:"value"`
}

// FieldUpdateOperation is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of an operation to perform on a field.
type FieldUpdateOperation struct {
	// Add is the A map containing the name of a field and the value to add to it.
	Add interface{} `json:"add"`
	// Edit is the A map containing the name of a field and the value to edit in it.
	Edit interface{} `json:"edit"`
	// Remove is the A map containing the name of a field and the value to removed from it.
	Remove interface{} `json:"remove"`
	// Set is the A map containing the name of a field and the value to set in it.
	Set interface{} `json:"set"`
}

// FieldValueClause is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A clause that asserts the current value of a field. For example, `summary ~ test`.
type FieldValueClause struct {
	Field   JqlQueryField         `json:"field"`
	Operand JqlQueryClauseOperand `json:"operand"`
	// Operator is the The operator between the field and operand.
	Operator string `json:"operator"`
}

// FieldWasClause is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A clause that asserts a previous value of a field. For example, `status WAS "Resolved" BY currentUser() BEFORE "2019/02/02"`. See [WAS](https://confluence.atlassian.com/x/dgiiLQ#Advancedsearching-operatorsreference-WASWAS) for more information about the WAS operator.
type FieldWasClause struct {
	Field   JqlQueryField         `json:"field"`
	Operand JqlQueryClauseOperand `json:"operand"`
	// Operator is the The operator between the field and operand.
	Operator string `json:"operator"`
	// Predicates is the The list of time predicates.
	Predicates []JqlQueryClauseTimePredicate `json:"predicates"`
}

// Fields is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Key fields from the linked issue.
type Fields struct {
	// Assignee is the The assignee of the linked issue.
	Assignee struct {
		*UserDetails `json:",inline"`
	} `json:"assignee"`
	// IssueType is the The type of the linked issue.
	IssueType struct {
		*IssueTypeDetails `json:",inline"`
	} `json:"issueType"`
	// Issuetype is the The type of the linked issue.
	Issuetype IssueTypeDetails `json:"issuetype"`
	// Priority is the The priority of the linked issue.
	Priority struct {
		*Priority `json:",inline"`
	} `json:"priority"`
	// Status is the The status of the linked issue.
	Status struct {
		*StatusDetails `json:",inline"`
	} `json:"status"`
	// Summary is the The summary description of the linked issue.
	Summary string `json:"summary"`
	// Timetracking is the The time tracking of the linked issue.
	Timetracking struct {
		*TimeTrackingDetails `json:",inline"`
	} `json:"timetracking"`
}

// Filter is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about a filter.
type Filter struct {
	// Description is the A description of the filter.
	Description string `json:"description"`
	// Favourite is the Whether the filter is selected as a favorite.
	Favourite bool `json:"favourite"`
	// FavouritedCount is the The count of how many users have selected this filter as a favorite, including the filter owner.
	FavouritedCount int64 `json:"favouritedCount"`
	// ID is the The unique identifier for the filter.
	ID string `json:"id"`
	// Jql is the The JQL query for the filter. For example, *project = SSP AND issuetype = Bug*.
	Jql string `json:"jql"`
	// Name is the The name of the filter. Must be unique.
	Name string `json:"name"`
	// Owner is the The user who owns the filter. This is defaulted to the creator of the filter, however Jira administrators can change the owner of a shared filter in the admin settings.
	Owner struct {
		*User `json:",inline"`
	} `json:"owner"`
	// SearchURL is the A URL to view the filter results in Jira, using the [Search for issues using JQL](#api-rest-api-3-filter-search-get) operation with the filter's JQL string to return the filter results. For example, *https://your-domain.atlassian.net/rest/api/3/search?jql=project+%3D+SSP+AND+issuetype+%3D+Bug*.
	SearchURL string `json:"searchUrl"`
	// Self is the The URL of the filter.
	Self string `json:"self"`
	// SharePermissions is the The groups and projects that the filter is shared with.
	SharePermissions []SharePermission `json:"sharePermissions"`
	// SharedUsers is the A paginated list of the users that the filter is shared with. This includes users that are members of the groups or can browse the projects that the filter is shared with.
	SharedUsers struct {
		*UserList `json:",inline"`
	} `json:"sharedUsers"`
	// Subscriptions is the A paginated list of the users that are subscribed to the filter.
	Subscriptions struct {
		*FilterSubscriptionsList `json:",inline"`
	} `json:"subscriptions"`
	// ViewURL is the A URL to view the filter results in Jira, using the ID of the filter. For example, *https://your-domain.atlassian.net/issues/?filter=10100*.
	ViewURL string `json:"viewUrl"`
}

// FilterDetails is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of a filter.
type FilterDetails struct {
	// Description is the A description of the filter.
	Description string `json:"description"`
	// Favourite is the Whether the filter is selected as a favorite by any users, not including the filter owner.
	Favourite bool `json:"favourite"`
	// FavouritedCount is the The count of how many users have selected this filter as a favorite, including the filter owner.
	FavouritedCount int64 `json:"favouritedCount"`
	// ID is the The unique identifier for the filter.
	ID string `json:"id"`
	// Jql is the The JQL query for the filter. For example, *project = SSP AND issuetype = Bug*.
	Jql string `json:"jql"`
	// Name is the The name of the filter. Must be unique.
	Name string `json:"name"`
	// Owner is the The user who owns the filter. This is defaulted to the creator of the filter, however Jira administrators can change the owner of a shared filter in the admin settings.
	Owner struct {
		*User `json:",inline"`
	} `json:"owner"`
	// SearchURL is the A URL to view the filter results in Jira, using the [Search for issues using JQL](#api-rest-api-3-filter-search-get) operation with the filter's JQL string to return the filter results. For example, *https://your-domain.atlassian.net/rest/api/3/search?jql=project+%3D+SSP+AND+issuetype+%3D+Bug*.
	SearchURL string `json:"searchUrl"`
	// Self is the The URL of the filter.
	Self string `json:"self"`
	// SharePermissions is the The groups and projects that the filter is shared with. This can be specified when updating a filter, but not when creating a filter.
	SharePermissions []SharePermission `json:"sharePermissions"`
	// Subscriptions is the The users that are subscribed to the filter.
	Subscriptions []FilterSubscription `json:"subscriptions"`
	// ViewURL is the A URL to view the filter results in Jira, using the ID of the filter. For example, *https://your-domain.atlassian.net/issues/?filter=10100*.
	ViewURL string `json:"viewUrl"`
}

// FilterSubscription is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of a user or group subscribing to a filter.
type FilterSubscription struct {
	// Group is the The group subscribing to filter.
	Group struct {
		*GroupName `json:",inline"`
	} `json:"group"`
	// ID is the The ID of the filter subscription.
	ID int64 `json:"id"`
	// User is the The user subscribing to filter.
	User struct {
		*User `json:",inline"`
	} `json:"user"`
}

// FilterSubscriptionsList is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A paginated list of subscriptions to a filter.
type FilterSubscriptionsList struct {
	// EndIndex is the The index of the last item returned on the page.
	EndIndex int64 `json:"end-index"`
	// Items is the The list of items.
	Items []FilterSubscription `json:"items"`
	// MaxResults is the The maximum number of results that could be on the page.
	MaxResults int64 `json:"max-results"`
	// Size is the The number of items on the page.
	Size int64 `json:"size"`
	// StartIndex is the The index of the first item returned on the page.
	StartIndex int64 `json:"start-index"`
}

// FoundGroup is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A group found in a search.
type FoundGroup struct {
	// GroupID is the The ID of the group, if available, which uniquely identifies the group across all Atlassian products. For example, *952d12c3-5b5b-4d04-bb32-44d383afc4b2*.
	GroupID string `json:"groupId"`
	// HTML is the The group name with the matched query string highlighted with the HTML bold tag.
	HTML   string       `json:"html"`
	Labels []GroupLabel `json:"labels"`
	// Name is the The name of the group.
	Name string `json:"name"`
}

// FoundGroups is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The list of groups found in a search, including header text (Showing X of Y matching groups) and total of matched groups.
type FoundGroups struct {
	Groups []FoundGroup `json:"groups"`
	// Header is the Header text indicating the number of groups in the response and the total number of groups found in the search.
	Header string `json:"header"`
	// Total is the The total number of groups found in the search.
	Total int64 `json:"total"`
}

// FoundUsers is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The list of users found in a search, including header text (Showing X of Y matching users) and total of matched users.
type FoundUsers struct {
	// Header is the Header text indicating the number of users in the response and the total number of users found in the search.
	Header string `json:"header"`
	// Total is the The total number of users found in the search.
	Total int64            `json:"total"`
	Users []UserPickerUser `json:"users"`
}

// FoundUsersAndGroups is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// List of users and groups found in a search.
type FoundUsersAndGroups struct {
	Groups FoundGroups `json:"groups"`
	Users  FoundUsers  `json:"users"`
}

// FunctionOperand is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// An operand that is a function. See [Advanced searching - functions reference](https://confluence.atlassian.com/x/dwiiLQ) for more information about JQL functions.
type FunctionOperand struct {
	Arguments []string `json:"arguments"`
	// Function is the The name of the function.
	Function string `json:"function"`
}

// FunctionReferenceData is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of functions that can be used in advanced searches.
type FunctionReferenceData struct {
	// DisplayName is the The display name of the function.
	DisplayName string `json:"displayName"`
	// IsList is the Whether the function can take a list of arguments.
	IsList string   `json:"isList"`
	Types  []string `json:"types"`
	// Value is the The function identifier.
	Value string `json:"value"`
}

// GlobalScopeBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type GlobalScopeBean struct {
	Attributes []string `json:"attributes"`
}

// Group is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type Group struct {
	// Expand is the Expand options that include additional group details in the response.
	Expand string `json:"expand"`
	// Name is the The name of group.
	Name string `json:"name"`
	// Self is the The URL for these group details.
	Self string `json:"self"`
	// Users is the A paginated list of the users that are members of the group. A maximum of 50 users is returned in the list, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 50 users, use`?expand=users[51:100]`.
	Users struct {
		*PagedListUserDetailsApplicationUser `json:",inline"`
	} `json:"users"`
}

// GroupDetails is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about a group.
type GroupDetails struct {
	// GroupID is the The ID of the group, if available, which uniquely identifies the group across all Atlassian products. For example, *952d12c3-5b5b-4d04-bb32-44d383afc4b2*.
	GroupID string `json:"groupId"`
	// Name is the The name of the group.
	Name string `json:"name"`
}

// GroupLabel is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A group label.
type GroupLabel struct {
	// Text is the The group label name.
	Text string `json:"text"`
	// Title is the The title of the group label.
	Title string `json:"title"`
	// Type is the The type of the group label.
	Type string `json:"type"`
}

// GroupName is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about a group name.
type GroupName struct {
	// Name is the The name of group.
	Name string `json:"name"`
	// Self is the The URL for these group details.
	Self string `json:"self"`
}

// HealthCheckResult is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Jira instance health check results. Deprecated and no longer returned.
type HealthCheckResult struct {
	// Description is the The description of the Jira health check item.
	Description string `json:"description"`
	// Name is the The name of the Jira health check item.
	Name string `json:"name"`
	// Passed is the Whether the Jira health check item passed or failed.
	Passed bool `json:"passed"`
}

// Hierarchy is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Project Issue Type Hierarchy
type Hierarchy struct {
	Level []HierarchyLevel `json:"level"`
}

// HierarchyLevel is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type HierarchyLevel struct {
	AboveLevelID           int64   `json:"aboveLevelId"`
	BelowLevelID           int64   `json:"belowLevelId"`
	ExternalUuID           string  `json:"externalUuid"`
	ID                     int64   `json:"id"`
	IssueTypeIds           []int64 `json:"issueTypeIds"`
	Name                   string  `json:"name"`
	ProjectConfigurationID int64   `json:"projectConfigurationId"`
}

// HistoryMetadata is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of issue history metadata.
type HistoryMetadata struct {
	// ActivityDescription is the The activity described in the history record.
	ActivityDescription string `json:"activityDescription"`
	// ActivityDescriptionKey is the The key of the activity described in the history record.
	ActivityDescriptionKey string `json:"activityDescriptionKey"`
	// Actor is the Details of the user whose action created the history record.
	Actor struct {
		*HistoryMetadataParticipant `json:",inline"`
	} `json:"actor"`
	// Cause is the Details of the cause that triggered the creation the history record.
	Cause struct {
		*HistoryMetadataParticipant `json:",inline"`
	} `json:"cause"`
	// Description is the The description of the history record.
	Description string `json:"description"`
	// DescriptionKey is the The description key of the history record.
	DescriptionKey string `json:"descriptionKey"`
	// EmailDescription is the The description of the email address associated the history record.
	EmailDescription string `json:"emailDescription"`
	// EmailDescriptionKey is the The description key of the email address associated the history record.
	EmailDescriptionKey string `json:"emailDescriptionKey"`
	// LDC: commenting-out as it fails on json-objects and we do not use it. ExtraData           string `json:"extraData"`
	// Generator is the Details of the system that generated the history record.
	Generator struct {
		*HistoryMetadataParticipant `json:",inline"`
	} `json:"generator"`
	// Type is the The type of the history record.
	Type string `json:"type"`
}

// HistoryMetadataParticipant is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of user or system associated with a issue history metadata item.
type HistoryMetadataParticipant struct {
	// AvatarURL is the The URL to an avatar for the user or system associated with a history record.
	AvatarURL string `json:"avatarUrl"`
	// DisplayName is the The display name of the user or system associated with a history record.
	DisplayName string `json:"displayName"`
	// DisplayNameKey is the The key of the display name of the user or system associated with a history record.
	DisplayNameKey string `json:"displayNameKey"`
	// ID is the The ID of the user or system associated with a history record.
	ID string `json:"id"`
	// Type is the The type of the user or system associated with a history record.
	Type string `json:"type"`
	// URL is the The URL of the user or system associated with a history record.
	URL string `json:"url"`
}

// Icon is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// An icon. If no icon is defined:
//
//  *  for a status icon, no status icon displays in Jira.
//  *  for the remote object icon, the default link icon displays in Jira.
type Icon struct {
	// Link is the The URL of the tooltip, used only for a status icon. If not set, the status icon in Jira is not clickable.
	Link string `json:"link"`
	// Title is the The title of the icon. This is used as follows:
	//
	//  *  For a status icon it is used as a tooltip on the icon. If not set, the status icon doesn't display a tooltip in Jira.
	//  *  For the remote object icon it is used in conjunction with the application name to display a tooltip for the link's icon. The tooltip takes the format "\[application name\] icon title". Blank itemsare excluded from the tooltip title. If both items are blank, the icon tooltop displays as "Web Link".
	Title string `json:"title"`
	// URL16x16 is the The URL of an icon that displays at 16x16 pixel in Jira.
	URL16x16 string `json:"url16x16"`
}

// IconBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// An icon.
type IconBean struct {
	// Link is the The URL of the tooltip, used only for a status icon.
	Link string `json:"link"`
	// Title is the The title of the icon, for use as a tooltip on the icon.
	Title string `json:"title"`
	// URL16x16 is the The URL of a 16x16 pixel icon.
	URL16x16 string `json:"url16x16"`
}

// IDBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type IDBean struct {
	// ID is the The ID of the permission scheme to associate with the project. Use the [Get all permission schemes](#api-rest-api-3-permissionscheme-get) resource to get a list of permission scheme IDs.
	ID int64 `json:"id"`
}

// IDOrKeyBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type IDOrKeyBean struct {
	// ID is the The ID of the referenced item.
	ID int64 `json:"id"`
	// Key is the The key of the referenced item.
	Key string `json:"key"`
}

// IncludedFields is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type IncludedFields struct {
	ActuallyIncluded []string `json:"actuallyIncluded"`
	Excluded         []string `json:"excluded"`
	Included         []string `json:"included"`
}

// IssueBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type IssueBean struct {
	// Changelog is the Details of changelogs associated with the issue.
	Changelog struct {
		*PageOfChangelogs `json:",inline"`
	} `json:"changelog"`
	// Editmeta is the The metadata for the fields on the issue that can be amended.
	Editmeta struct {
		*IssueUpdateMetadata `json:",inline"`
	} `json:"editmeta"`
	// Expand is the Expand options that include additional issue details in the response.
	Expand          string                 `json:"expand"`
	Fields          map[string]interface{} `json:"fields"`
	FieldsToInclude IncludedFields         `json:"fieldsToInclude"`
	// ID is the The ID of the issue.
	ID string `json:"id"`
	// Key is the The key of the issue.
	Key   string `json:"key"`
	Names string `json:"names"`
	// Operations is the The operations that can be performed on the issue.
	Operations struct {
		*Operations `json:",inline"`
	} `json:"operations"`
	Properties     map[string]interface{}  `json:"properties"`
	RenderedFields map[string]interface{}  `json:"renderedFields"`
	Schema         map[string]JsonTypeBean `json:"schema"`
	// Self is the The URL of the issue details.
	Self string `json:"self"`
	// Transitions is the The transitions that can be performed on the issue.
	Transitions              []IssueTransition                 `json:"transitions"`
	VersionedRepresentations map[string]map[string]interface{} `json:"versionedRepresentations"`
}

// IssueCommentListRequestBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type IssueCommentListRequestBean struct {
	IDs []int64 `json:"ids"`
}

// IssueCreateMetadata is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The wrapper for the issue creation metadata for a list of projects.
type IssueCreateMetadata struct {
	// Expand is the Expand options that include additional project details in the response.
	Expand string `json:"expand"`
	// Projects is the List of projects and their issue creation metadata.
	Projects []ProjectIssueCreateMetadata `json:"projects"`
}

// IssueEntityProperties is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Lists of issues and entity properties. See [Entity properties](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/) for more information.
type IssueEntityProperties struct {
	EntitiesIds []int64             `json:"entitiesIds"`
	Properties  map[string]JsonNode `json:"properties"`
}

// IssueFieldOption is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of the options for a select list issue field.
type IssueFieldOption struct {
	Config IssueFieldOptionConfiguration `json:"config"`
	// ID is the The unique identifier for the option. This is only unique within the select field's set of options.
	ID         int64                  `json:"id"`
	Properties map[string]interface{} `json:"properties"`
	// Value is the The option's name, which is displayed in Jira.
	Value string `json:"value"`
}

// IssueFieldOptionConfiguration is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of the projects the option is available in.
type IssueFieldOptionConfiguration struct {
	Attributes []string `json:"attributes"`
	// Scope is the Defines the projects that the option is available in. If the scope is not defined, then the option is available in all projects.
	Scope struct {
		*IssueFieldOptionScopeBean `json:",inline"`
	} `json:"scope"`
}

// IssueFieldOptionCreateBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type IssueFieldOptionCreateBean struct {
	Config     IssueFieldOptionConfiguration `json:"config"`
	Properties map[string]interface{}        `json:"properties"`
	// Value is the The option's name, which is displayed in Jira.
	Value string `json:"value"`
}

// IssueFieldOptionScopeBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type IssueFieldOptionScopeBean struct {
	// Global is the Defines the behavior of the option within the global context. If this property is set, even if set to an empty object, then the option is available in all projects.
	Global struct {
		*GlobalScopeBean `json:",inline"`
	} `json:"global"`
	Projects []int64 `json:"projects"`
	// Projects2 is the Defines the projects in which the option is available and the behavior of the option within each project. Specify one object per project. The behavior of the option in a project context overrides the behavior in the global context.
	Projects2 []ProjectScopeBean `json:"projects2"`
}

// IssueFilterForBulkPropertyDelete is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Bulk operation filter details.
type IssueFilterForBulkPropertyDelete struct {
	// CurrentValue is the The value of properties to perform the bulk operation on.
	CurrentValue interface{} `json:"currentValue"`
	EntityIds    []int64     `json:"entityIds"`
}

// IssueFilterForBulkPropertySet is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Bulk operation filter details.
type IssueFilterForBulkPropertySet struct {
	// CurrentValue is the The value of properties to perform the bulk operation on.
	CurrentValue interface{} `json:"currentValue"`
	EntityIds    []int64     `json:"entityIds"`
	// HasProperty is the Whether the bulk operation occurs only when the property is present on or absent from an issue.
	HasProperty bool `json:"hasProperty"`
}

// IssueLink is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of a link between issues.
type IssueLink struct {
	// ID is the The ID of the issue link.
	ID string `json:"id"`
	// InwardIssue is the The issue the link joins to.
	InwardIssue struct {
		*LinkedIssue `json:",inline"`
	} `json:"inwardIssue"`
	// OutwardIssue is the The issue the link originates from.
	OutwardIssue struct {
		*LinkedIssue `json:",inline"`
	} `json:"outwardIssue"`
	// Self is the The URL of the issue link.
	Self string `json:"self"`
	// Type is the The type of link between the issues.
	Type struct {
		*IssueLinkType `json:",inline"`
	} `json:"type"`
}

// IssueLinkType is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// This object is used as follows:
//
//  *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it defines and reports on the type of link between the issues. Find a list of issue link types with [Get issue link types](#api-rest-api-3-issueLinkType-get).
//  *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it defines and reports on issue link types.
type IssueLinkType struct {
	// ID is the The ID of the issue link type and is used as follows:
	//
	//  *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is the type of issue link. Required on create when `name` isn't provided. Otherwise, read only.
	//  *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is read only.
	ID string `json:"id"`
	// Inward is the The description of the issue link type inward link and is used as follows:
	//
	//  *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is read only.
	//  *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is required on create and optional on update. Otherwise, read only.
	Inward string `json:"inward"`
	// Name is the The name of the issue link type and is used as follows:
	//
	//  *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is the type of issue link. Required on create when `id` isn't provided. Otherwise, read only.
	//  *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is required on create and optional on update. Otherwise, read only.
	Name string `json:"name"`
	// Outward is the The description of the issue link type outward link and is used as follows:
	//
	//  *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is read only.
	//  *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is required on create and optional on update. Otherwise, read only.
	Outward string `json:"outward"`
	// Self is the The URL of the issue link type. Read only.
	Self string `json:"self"`
}

// IssueLinkTypes is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A list of issue link type beans.
type IssueLinkTypes struct {
	// IssueLinkTypes is the The issue link type bean.
	IssueLinkTypes []IssueLinkType `json:"issueLinkTypes"`
}

// IssueMatches is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A list of matched issues or errors for each JQL query, in the order the JQL queries were passed.
type IssueMatches struct {
	Matches []IssueMatchesForJQL `json:"matches"`
}

// IssueMatchesForJQL is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A list of the issues matched to a JQL query or details of errors encountered during matching.
type IssueMatchesForJQL struct {
	// Errors is the A list of errors.
	Errors []string `json:"errors"`
	// MatchedIssues is the A list of issue IDs.
	MatchedIssues []int64 `json:"matchedIssues"`
}

// IssuePickerSuggestions is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A list of issues suggested for use in auto-completion.
type IssuePickerSuggestions struct {
	// Sections is the A list of issues for an issue type suggested for use in auto-completion.
	Sections []IssuePickerSuggestionsIssueType `json:"sections"`
}

// IssuePickerSuggestionsIssueType is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A type of issue suggested for use in auto-completion.
type IssuePickerSuggestionsIssueType struct {
	// ID is the The ID of the type of issues suggested for use in auto-completion.
	ID string `json:"id"`
	// Issues is the A list of issues suggested for use in auto-completion.
	Issues []SuggestedIssue `json:"issues"`
	// Label is the The label of the type of issues suggested for use in auto-completion.
	Label string `json:"label"`
	// Msg is the If no issue suggestions are found, returns a message indicating no suggestions were found,
	Msg string `json:"msg"`
	// Sub is the If issue suggestions are found, returns a message indicating the number of issues suggestions found and returned.
	Sub string `json:"sub"`
}

// IssueSecurityLevelMember is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Issue security level member.
type IssueSecurityLevelMember struct {
	// Holder is the The user or group being granted the permission. It consists of a `type` and a type-dependent `parameter`. See [Holder object](#holder-object) in *Get all permission schemes* for more information.
	Holder struct {
		*PermissionHolder `json:",inline"`
	} `json:"holder"`
	// ID is the The ID of the issue security level member.
	ID int64 `json:"id"`
	// IssueSecurityLevelID is the The ID of the issue security level.
	IssueSecurityLevelID int64 `json:"issueSecurityLevelId"`
}

// IssueTransition is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of an issue transition.
type IssueTransition struct {
	// Expand is the Expand options that include additional transition details in the response.
	Expand string                   `json:"expand"`
	Fields map[string]FieldMetadata `json:"fields"`
	// HasScreen is the Whether there is a screen associated with the issue transition.
	HasScreen bool `json:"hasScreen"`
	// ID is the The ID of the issue transition. Required when specifying a transition to undertake.
	ID string `json:"id"`
	// IsAvailable is the Whether the transition is available to be performed.
	IsAvailable bool `json:"isAvailable"`
	// IsConditional is the Whether the issue has to meet criteria before the issue transition is applied.
	IsConditional bool `json:"isConditional"`
	// IsGlobal is the Whether the issue transition is global, that is, the transition is applied to issues regardless of their status.
	IsGlobal bool `json:"isGlobal"`
	// IsInitial is the Whether this is the initial issue transition for the workflow.
	IsInitial bool `json:"isInitial"`
	// Name is the The name of the issue transition.
	Name string `json:"name"`
	// To is the Details of the issue status after the transition.
	To struct {
		*StatusDetails `json:",inline"`
	} `json:"to"`
}

// IssueTypeCreateBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type IssueTypeCreateBean struct {
	// Description is the The description of the issue type.
	Description string `json:"description"`
	// Name is the The unique name for the issue type. The maximum length is 60 characters.
	Name string `json:"name"`
	// Type is the Whether the issue type is `subtype` or `standard`. Defaults to `standard`.
	Type string `json:"type"`
}

// IssueTypeDetails is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about an issue type.
type IssueTypeDetails struct {
	// AvatarID is the The ID of the issue type's avatar.
	AvatarID int64 `json:"avatarId"`
	// Description is the The description of the issue type.
	Description string `json:"description"`
	// EntityID is the Unique ID for next-gen projects.
	EntityID string `json:"entityId"`
	// IconURL is the The URL of the issue type's avatar.
	IconURL string `json:"iconUrl"`
	// ID is the The ID of the issue type.
	ID string `json:"id"`
	// Name is the The name of the issue type.
	Name string `json:"name"`
	// Scope is the Details of the next-gen projects the issue type is available in.
	Scope struct {
		*Scope `json:",inline"`
	} `json:"scope"`
	// Self is the The URL of these issue type details.
	Self string `json:"self"`
	// Subtask is the Whether this issue type is used to create subtasks.
	Subtask bool `json:"subtask"`
}

// IssueTypeIDs is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A list of issue type IDs.
type IssueTypeIDs struct {
	IssueTypeIds []string `json:"issueTypeIds"`
}

// IssueTypeInfo is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of an issue type.
type IssueTypeInfo struct {
	// AvatarID is the The avatar of the issue type.
	AvatarID int64 `json:"avatarId"`
	// ID is the The ID of the issue type.
	ID int64 `json:"id"`
	// Name is the The name of the issue type.
	Name string `json:"name"`
}

// IssueTypeIssueCreateMetadata is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of the issue creation metadata for an issue type.
type IssueTypeIssueCreateMetadata struct {
	// AvatarID is the The ID of the issue type's avatar.
	AvatarID int64 `json:"avatarId"`
	// Description is the The description of the issue type.
	Description string `json:"description"`
	// EntityID is the Unique ID for next-gen projects.
	EntityID string `json:"entityId"`
	// Expand is the Expand options that include additional issue type metadata details in the response.
	Expand string                   `json:"expand"`
	Fields map[string]FieldMetadata `json:"fields"`
	// IconURL is the The URL of the issue type's avatar.
	IconURL string `json:"iconUrl"`
	// ID is the The ID of the issue type.
	ID string `json:"id"`
	// Name is the The name of the issue type.
	Name string `json:"name"`
	// Scope is the Details of the next-gen projects the issue type is available in.
	Scope struct {
		*Scope `json:",inline"`
	} `json:"scope"`
	// Self is the The URL of these issue type details.
	Self string `json:"self"`
	// Subtask is the Whether this issue type is used to create subtasks.
	Subtask bool `json:"subtask"`
}

// IssueTypeScheme is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of an issue type scheme.
type IssueTypeScheme struct {
	// DefaultIssueTypeID is the The ID of the default issue type of the issue type scheme.
	DefaultIssueTypeID string `json:"defaultIssueTypeId"`
	// Description is the The description of the issue type scheme.
	Description string `json:"description"`
	// ID is the The ID of the issue type scheme.
	ID string `json:"id"`
	// IsDefault is the Whether the issue type scheme is the default.
	IsDefault bool `json:"isDefault"`
	// Name is the The name of the issue type scheme.
	Name string `json:"name"`
}

// IssueTypeSchemeDetails is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of an issue type scheme and its associated issue types.
type IssueTypeSchemeDetails struct {
	// DefaultIssueTypeID is the The ID of the default issue type of the issue type scheme. This ID must be included in `issueTypeIds`.
	DefaultIssueTypeID string `json:"defaultIssueTypeId"`
	// Description is the The description of the issue type scheme. The maximum length is 4000 characters.
	Description  string   `json:"description"`
	IssueTypeIds []string `json:"issueTypeIds"`
	// Name is the The name of the issue type scheme. The name must be unique. The maximum length is 255 characters.
	Name string `json:"name"`
}

// IssueTypeSchemeID is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The ID of an issue type scheme.
type IssueTypeSchemeID struct {
	// IssueTypeSchemeID is the The ID of the issue type scheme.
	IssueTypeSchemeID string `json:"issueTypeSchemeId"`
}

// IssueTypeSchemeMapping is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Issue type scheme item.
type IssueTypeSchemeMapping struct {
	// IssueTypeID is the The ID of the issue type.
	IssueTypeID string `json:"issueTypeId"`
	// IssueTypeSchemeID is the The ID of the issue type scheme.
	IssueTypeSchemeID string `json:"issueTypeSchemeId"`
}

// IssueTypeSchemeProjectAssociation is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of the association between an issue type scheme and project.
type IssueTypeSchemeProjectAssociation struct {
	// IssueTypeSchemeID is the The ID of the issue type scheme.
	IssueTypeSchemeID string `json:"issueTypeSchemeId"`
	// ProjectID is the The ID of the project.
	ProjectID string `json:"projectId"`
}

// IssueTypeSchemeProjects is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Issue type scheme with a list of the projects that use it.
type IssueTypeSchemeProjects struct {
	// IssueTypeScheme is the Details of an issue type scheme.
	IssueTypeScheme struct {
		*IssueTypeScheme `json:",inline"`
	} `json:"issueTypeScheme"`
	ProjectIds []string `json:"projectIds"`
}

// IssueTypeSchemeUpdateDetails is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of the name, description, and default issue type for an issue type scheme.
type IssueTypeSchemeUpdateDetails struct {
	// DefaultIssueTypeID is the The ID of the default issue type of the issue type scheme.
	DefaultIssueTypeID string `json:"defaultIssueTypeId"`
	// Description is the The description of the issue type scheme. The maximum length is 4000 characters.
	Description string `json:"description"`
	// Name is the The name of the issue type scheme. The name must be unique. The maximum length is 255 characters.
	Name string `json:"name"`
}

// IssueTypeScreenScheme is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of an issue type screen scheme.
type IssueTypeScreenScheme struct {
	// Description is the The description of the issue type screen scheme.
	Description string `json:"description"`
	// ID is the The ID of the issue type screen scheme.
	ID string `json:"id"`
	// Name is the The name of the issue type screen scheme.
	Name string `json:"name"`
}

// IssueTypeScreenSchemeDetails is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The details of an issue type screen scheme.
type IssueTypeScreenSchemeDetails struct {
	// Description is the The description of the issue type screen scheme. The maximum length is 255 characters.
	Description string `json:"description"`
	// IssueTypeMappings is the The IDs of the screen schemes for the issue type IDs and *default*. A *default* entry is required to create an issue type screen scheme, it defines the mapping for all issue types without a screen scheme.
	IssueTypeMappings []IssueTypeScreenSchemeMapping `json:"issueTypeMappings"`
	// Name is the The name of the issue type screen scheme. The name must be unique. The maximum length is 255 characters.
	Name string `json:"name"`
}

// IssueTypeScreenSchemeID is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The ID of an issue type screen scheme.
type IssueTypeScreenSchemeID struct {
	// ID is the The ID of the issue type screen scheme.
	ID string `json:"id"`
}

// IssueTypeScreenSchemeItem is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The screen scheme for an issue type.
type IssueTypeScreenSchemeItem struct {
	// IssueTypeID is the The ID of the issue type or *default*. When set to *default* this issue type screen scheme item applies to all issue types without a screen scheme.
	IssueTypeID string `json:"issueTypeId"`
	// IssueTypeScreenSchemeID is the The ID of the issue type screen scheme.
	IssueTypeScreenSchemeID string `json:"issueTypeScreenSchemeId"`
	// ScreenSchemeID is the The ID of the screen scheme.
	ScreenSchemeID string `json:"screenSchemeId"`
}

// IssueTypeScreenSchemeMapping is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The IDs of the screen schemes for the issue type IDs.
type IssueTypeScreenSchemeMapping struct {
	// IssueTypeID is the The ID of the issue type or *default*. Only issue types used in classic projects are accepted. An entry for *default* must be provided and defines the mapping for all issue types without a screen scheme.
	IssueTypeID string `json:"issueTypeId"`
	// ScreenSchemeID is the The ID of the screen scheme. Only screen schemes used in classic projects are accepted.
	ScreenSchemeID string `json:"screenSchemeId"`
}

// IssueTypeScreenSchemeProjectAssociation is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Associated issue type screen scheme and project.
type IssueTypeScreenSchemeProjectAssociation struct {
	// IssueTypeScreenSchemeID is the The ID of the issue type screen scheme.
	IssueTypeScreenSchemeID string `json:"issueTypeScreenSchemeId"`
	// ProjectID is the The ID of the project.
	ProjectID string `json:"projectId"`
}

// IssueTypeScreenSchemeUpdateDetails is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of an issue type screen scheme.
type IssueTypeScreenSchemeUpdateDetails struct {
	// Description is the The description of the issue type screen scheme. The maximum length is 255 characters.
	Description string `json:"description"`
	// Name is the The name of the issue type screen scheme. The name must be unique. The maximum length is 255 characters.
	Name string `json:"name"`
}

// IssueTypeScreenSchemesProjects is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Issue type screen scheme with a list of the projects that use it.
type IssueTypeScreenSchemesProjects struct {
	// IssueTypeScreenScheme is the Details of an issue type screen scheme.
	IssueTypeScreenScheme struct {
		*IssueTypeScreenScheme `json:",inline"`
	} `json:"issueTypeScreenScheme"`
	ProjectIds []string `json:"projectIds"`
}

// IssueTypeUpdateBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type IssueTypeUpdateBean struct {
	// AvatarID is the The ID of an issue type avatar.
	AvatarID int64 `json:"avatarId"`
	// Description is the The description of the issue type.
	Description string `json:"description"`
	// Name is the The unique name for the issue type. The maximum length is 60 characters.
	Name string `json:"name"`
}

// IssueTypeWithStatus is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Status details for an issue type.
type IssueTypeWithStatus struct {
	// ID is the The ID of the issue type.
	ID string `json:"id"`
	// Name is the The name of the issue type.
	Name string `json:"name"`
	// Self is the The URL of the issue type's status details.
	Self string `json:"self"`
	// Statuses is the List of status details for the issue type.
	Statuses []StatusDetails `json:"statuses"`
	// Subtask is the Whether this issue type represents subtasks.
	Subtask bool `json:"subtask"`
}

// IssueTypeWorkflowMapping is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about the mapping between an issue type and a workflow.
type IssueTypeWorkflowMapping struct {
	// IssueType is the The ID of the issue type. Not required if updating the issue type-workflow mapping.
	IssueType string `json:"issueType"`
	// UpdateDraftIfNeeded is the Set to true to create or update the draft of a workflow scheme and update the mapping in the draft, when the workflow scheme cannot be edited. Defaults to `false`. Only applicable when updating the workflow-issue types mapping.
	UpdateDraftIfNeeded bool `json:"updateDraftIfNeeded"`
	// Workflow is the The name of the workflow.
	Workflow string `json:"workflow"`
}

// IssueTypesWorkflowMapping is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about the mapping between issue types and a workflow.
type IssueTypesWorkflowMapping struct {
	// DefaultMapping is the Whether the workflow is the default workflow for the workflow scheme.
	DefaultMapping bool     `json:"defaultMapping"`
	IssueTypes     []string `json:"issueTypes"`
	// UpdateDraftIfNeeded is the Whether a draft workflow scheme is created or updated when updating an active workflow scheme. The draft is updated with the new workflow-issue types mapping. Defaults to `false`.
	UpdateDraftIfNeeded bool `json:"updateDraftIfNeeded"`
	// Workflow is the The name of the workflow. Optional if updating the workflow-issue types mapping.
	Workflow string `json:"workflow"`
}

// IssueUpdateDetails is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of an issue update request.
type IssueUpdateDetails struct {
	Fields map[string]interface{} `json:"fields"`
	// HistoryMetadata is the Additional issue history details.
	HistoryMetadata struct {
		*HistoryMetadata `json:",inline"`
	} `json:"historyMetadata"`
	// Properties is the Details of issue properties to be add or update.
	Properties []EntityProperty `json:"properties"`
	// Transition is the Details of a transition. Required when performing a transition, optional when creating or editing an issue.
	Transition struct {
		*IssueTransition `json:",inline"`
	} `json:"transition"`
	Update []map[string]FieldUpdateOperation `json:"update"`
}

// IssueUpdateMetadata is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A list of editable field details.
type IssueUpdateMetadata struct {
	Fields map[string]FieldMetadata `json:"fields"`
}

// IssuesAndJQLQueries is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// List of issues and JQL queries.
type IssuesAndJQLQueries struct {
	// IssueIds is the A list of issue IDs.
	IssueIds []int64 `json:"issueIds"`
	// Jqls is the A list of JQL queries.
	Jqls []string `json:"jqls"`
}

// IssuesJqlMetaDataBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The description of the page of issues loaded by the provided JQL query.
type IssuesJqlMetaDataBean struct {
	// Count is the The number of issues that were loaded in this evaluation.
	Count int64 `json:"count"`
	// MaxResults is the The maximum number of issues that could be loaded in this evaluation.
	MaxResults int64 `json:"maxResults"`
	// StartAt is the The index of the first issue.
	StartAt int64 `json:"startAt"`
	// TotalCount is the The total number of issues the JQL returned.
	TotalCount         int64    `json:"totalCount"`
	ValidationWarnings []string `json:"validationWarnings"`
}

// IssuesMetaBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Meta data describing the `issues` context variable.
type IssuesMetaBean struct {
	Jql IssuesJqlMetaDataBean `json:"jql"`
}

// IssuesUpdateBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type IssuesUpdateBean struct {
	IssueUpdates []IssueUpdateDetails `json:"issueUpdates"`
}

// JQLPersonalDataMigrationRequest is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The JQL queries to be converted.
type JQLPersonalDataMigrationRequest struct {
	QueryStrings []string `json:"queryStrings"`
}

// JQLQueryWithUnknownUsers is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// JQL queries that contained users that could not be found
type JQLQueryWithUnknownUsers struct {
	// ConvertedQuery is the The converted query, with accountIDs instead of user identifiers, or 'unknown' for users that could not be found
	ConvertedQuery string `json:"convertedQuery"`
	// OriginalQuery is the The original query, for reference
	OriginalQuery string `json:"originalQuery"`
}

// JQLReferenceData is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Lists of JQL reference data.
type JQLReferenceData struct {
	JqlReservedWords []string `json:"jqlReservedWords"`
	// VisibleFieldNames is the List of fields usable in JQL queries.
	VisibleFieldNames []FieldReferenceData `json:"visibleFieldNames"`
	// VisibleFunctionNames is the List of functions usable in JQL queries.
	VisibleFunctionNames []FunctionReferenceData `json:"visibleFunctionNames"`
}

// JexpIssues is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The JQL specifying the issues available in the evaluated Jira expression under the `issues` context variable.
type JexpIssues struct {
	// Jql is the The JQL query that specifies the set of issues available in the Jira expression.
	Jql struct {
		*JexpJqlIssues `json:",inline"`
	} `json:"jql"`
}

// JexpJqlIssues is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The JQL specifying the issues available in the evaluated Jira expression under the `issues` context variable. Not all issues returned by the JQL query are loaded, only those described by the `startAt` and `maxResults` properties. To determine whether it is necessary to iterate to ensure all the issues returned by the JQL query are evaluated, inspect `meta.issues.jql.count` in the response.
type JexpJqlIssues struct {
	// MaxResults is the The maximum number of issues to return from the JQL query. Inspect `meta.issues.jql.maxResults` in the response to ensure the maximum value has not been exceeded.
	MaxResults int64 `json:"maxResults"`
	// Query is the The JQL query.
	Query string `json:"query"`
	// StartAt is the The index of the first issue to return from the JQL query.
	StartAt int64 `json:"startAt"`
	// Validation is the Determines how to validate the JQL query and treat the validation results.
	Validation string `json:"validation"`
}

// JiraExpressionAnalysis is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about the analysed Jira expression.
type JiraExpressionAnalysis struct {
	Complexity JiraExpressionComplexity `json:"complexity"`
	// Errors is the A list of validation errors. Not included if the expression is valid.
	Errors []JiraExpressionValidationError `json:"errors"`
	// Expression is the The analysed expression.
	Expression string `json:"expression"`
	// Type is the EXPERIMENTAL. The inferred type of the expression.
	Type string `json:"type"`
	// ValID is the Whether the expression is valid and the interpreter will evaluate it. Note that the expression may fail at runtime (for example, if it executes too many expensive operations).
	ValID bool `json:"valid"`
}

// JiraExpressionComplexity is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about the complexity of the analysed Jira expression.
type JiraExpressionComplexity struct {
	// ExpensiveOperations is the Information that can be used to determine how many [expensive operations](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/#expensive-operations) the evaluation of the expression will perform. This information may be a formula or number. For example:
	//
	//  *  `issues.map(i => i.comments)` performs as many expensive operations as there are issues on the issues list. So this parameter returns `N`, where `N` is the size of issue list.
	//  *  `new Issue(10010).comments` gets comments for one issue, so its complexity is `2` (`1` to retrieve issue 10010 from the database plus `1` to get its comments).
	ExpensiveOperations string `json:"expensiveOperations"`
	// Variables is the Variables used in the formula, mapped to the parts of the expression they refer to.
	Variables string `json:"variables"`
}

// JiraExpressionEvalContextBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type JiraExpressionEvalContextBean struct {
	// Board is the The ID of the board that is available under the `board` variable when evaluating the expression.
	Board int64 `json:"board"`
	// CustomerRequest is the The ID of the customer request that is available under the `customerRequest` variable when evaluating the expression. This is the same as the ID of the underlying Jira issue, but the customer request context variable will have a different type.
	CustomerRequest int64 `json:"customerRequest"`
	// Issue is the The issue that is available under the `issue` variable when evaluating the expression.
	Issue struct {
		*IDOrKeyBean `json:",inline"`
	} `json:"issue"`
	// Issues is the The collection of issues that is available under the `issues` variable when evaluating the expression.
	Issues struct {
		*JexpIssues `json:",inline"`
	} `json:"issues"`
	// Project is the The project that is available under the `project` variable when evaluating the expression.
	Project struct {
		*IDOrKeyBean `json:",inline"`
	} `json:"project"`
	// ServiceDesk is the The ID of the service desk that is available under the `serviceDesk` variable when evaluating the expression.
	ServiceDesk int64 `json:"serviceDesk"`
	// Sprint is the The ID of the sprint that is available under the `sprint` variable when evaluating the expression.
	Sprint int64 `json:"sprint"`
}

// JiraExpressionEvalRequestBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type JiraExpressionEvalRequestBean struct {
	// Context is the The context in which the Jira expression is evaluated.
	Context struct {
		*JiraExpressionEvalContextBean `json:",inline"`
	} `json:"context"`
	// Expression is the The Jira expression to evaluate.
	Expression string `json:"expression"`
}

// JiraExpressionEvaluationMetaDataBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type JiraExpressionEvaluationMetaDataBean struct {
	// Complexity is the Contains information about the expression complexity. For example, the number of steps it took to evaluate the expression.
	Complexity struct {
		*JiraExpressionsComplexityBean `json:",inline"`
	} `json:"complexity"`
	// Issues is the Contains information about the `issues` variable in the context. For example, is the issues were loaded with JQL, information about the page will be included here.
	Issues struct {
		*IssuesMetaBean `json:",inline"`
	} `json:"issues"`
}

// JiraExpressionForAnalysis is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of Jira expressions for analysis.
type JiraExpressionForAnalysis struct {
	// ContextVariables is the Context variables and their types. The type checker assumes that <a href="https://developer.atlassian.com/cloud/jira/platform/jira-expressions/#context-variables">common context variables</a>, such as <code>issue</code> or <code>project</code>, are available in context and sets their type. Use this property to override the default types or provide details of new variables.
	ContextVariables string `json:"contextVariables"`
	// Expressions is the The list of Jira expressions to analyse.
	Expressions []string `json:"expressions"`
}

// JiraExpressionResult is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The result of evaluating a Jira expression.
type JiraExpressionResult struct {
	// Meta is the Contains various characteristics of the performed expression evaluation.
	Meta struct {
		*JiraExpressionEvaluationMetaDataBean `json:",inline"`
	} `json:"meta"`
	// Value is the The value of the evaluated expression. It may be a primitive JSON value or a Jira REST API object. (Some expressions do not produce any meaningful results—for example, an expression that returns a lambda function—if that's the case a simple string representation is returned. These string representations should not be relied upon and may change without notice.)
	Value interface{} `json:"value"`
}

// JiraExpressionValidationError is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about syntax and type errors. The error details apply to the entire expression, unless the object includes:
//
//  *  `line` and `column`
//  *  `expression`
type JiraExpressionValidationError struct {
	// Column is the The text column in which the error occurred.
	Column int64 `json:"column"`
	// Expression is the The part of the expression in which the error occurred.
	Expression string `json:"expression"`
	// Line is the The text line in which the error occurred.
	Line int64 `json:"line"`
	// Message is the Details about the error.
	Message string `json:"message"`
	// Type is the The error type.
	Type string `json:"type"`
}

// JiraExpressionsAnalysis is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about the analysed Jira expression.
type JiraExpressionsAnalysis struct {
	// Results is the The results of Jira expressions analysis.
	Results []JiraExpressionAnalysis `json:"results"`
}

// JiraExpressionsComplexityBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type JiraExpressionsComplexityBean struct {
	// Beans is the The number of Jira REST API beans returned in the response.
	Beans struct {
		*JiraExpressionsComplexityValueBean `json:",inline"`
	} `json:"beans"`
	// ExpensiveOperations is the The number of expensive operations executed while evaluating the expression. Expensive operations are those that load additional data, such as entity properties, comments, or custom fields.
	ExpensiveOperations struct {
		*JiraExpressionsComplexityValueBean `json:",inline"`
	} `json:"expensiveOperations"`
	// PrimitiveValues is the The number of primitive values returned in the response.
	PrimitiveValues struct {
		*JiraExpressionsComplexityValueBean `json:",inline"`
	} `json:"primitiveValues"`
	// Steps is the The number of steps it took to evaluate the expression, where a step is a high-level operation performed by the expression. A step is an operation such as arithmetic, accessing a property, accessing a context variable, or calling a function.
	Steps struct {
		*JiraExpressionsComplexityValueBean `json:",inline"`
	} `json:"steps"`
}

// JiraExpressionsComplexityValueBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type JiraExpressionsComplexityValueBean struct {
	// Limit is the The maximum allowed complexity. The evaluation will fail if this value is exceeded.
	Limit int64 `json:"limit"`
	// Value is the The complexity value of the current expression.
	Value int64 `json:"value"`
}

// JqlQueriesToParse is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A list of JQL queries to parse.
type JqlQueriesToParse struct {
	Queries []string `json:"queries"`
}

// JqlQuery is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A parsed JQL query.
type JqlQuery struct {
	OrderBy JqlQueryOrderByClause `json:"orderBy"`
	Where   JqlQueryClause        `json:"where"`
}

// JqlQueryClause is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A JQL query clause.
type JqlQueryClause struct {
	*CompoundClause     `json:",inline"`
	*FieldValueClause   `json:",inline"`
	*FieldWasClause     `json:",inline"`
	*FieldChangedClause `json:",inline"`
}

// JqlQueryClauseOperand is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of an operand in a JQL clause.
type JqlQueryClauseOperand struct {
	*ListOperand     `json:",inline"`
	*ValueOperand    `json:",inline"`
	*FunctionOperand `json:",inline"`
	*KeywordOperand  `json:",inline"`
}

// JqlQueryClauseTimePredicate is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A time predicate for a temporal JQL clause.
type JqlQueryClauseTimePredicate struct {
	Operand JqlQueryClauseOperand `json:"operand"`
	// Operator is the The operator between the field and the operand.
	Operator string `json:"operator"`
}

// JqlQueryField is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A field used in a JQL query. See [Advanced searching - fields reference](https://confluence.atlassian.com/x/dAiiLQ) for more information about fields in JQL queries.
type JqlQueryField struct {
	// Name is the The name of the field.
	Name string `json:"name"`
	// Property is the When the field refers to a value in an entity property, details of the entity property value.
	Property []JqlQueryFieldEntityProperty `json:"property"`
}

// JqlQueryFieldEntityProperty is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of an entity property.
type JqlQueryFieldEntityProperty struct {
	// Entity is the The object on which the property is set.
	Entity string `json:"entity"`
	// Key is the The key of the property.
	Key string `json:"key"`
	// Path is the The path in the property value to query.
	Path string `json:"path"`
	// Type is the The type of the property value extraction. Not available if the extraction for the property is not registered on the instance with the [Entity property](https://developer.atlassian.com/cloud/jira/platform/modules/entity-property/) module.
	Type string `json:"type"`
}

// JqlQueryOrderByClause is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of the order-by JQL clause.
type JqlQueryOrderByClause struct {
	// Fields is the The list of order-by clause fields and their ordering directives.
	Fields []JqlQueryOrderByClauseElement `json:"fields"`
}

// JqlQueryOrderByClauseElement is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// An element of the order-by JQL clause.
type JqlQueryOrderByClauseElement struct {
	// Direction is the The direction in which to order the results.
	Direction string        `json:"direction"`
	Field     JqlQueryField `json:"field"`
}

// JqlQueryUnitaryOperand is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// An operand that can be part of a list operand.
type JqlQueryUnitaryOperand struct {
	*ValueOperand    `json:",inline"`
	*FunctionOperand `json:",inline"`
	*KeywordOperand  `json:",inline"`
}

// JsonNode is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type JsonNode struct {
	Array               bool        `json:"array"`
	BigDecimal          bool        `json:"bigDecimal"`
	BigInteger          bool        `json:"bigInteger"`
	BigIntegerValue     int64       `json:"bigIntegerValue"`
	Binary              bool        `json:"binary"`
	BinaryValue         []string    `json:"binaryValue"`
	Boolean             bool        `json:"boolean"`
	BooleanValue        bool        `json:"booleanValue"`
	ContainerNode       bool        `json:"containerNode"`
	DecimalValue        float64     `json:"decimalValue"`
	Double              bool        `json:"double"`
	DoubleValue         float64     `json:"doubleValue"`
	Elements            interface{} `json:"elements"`
	FieldNames          interface{} `json:"fieldNames"`
	Fields              interface{} `json:"fields"`
	FloatingPointNumber bool        `json:"floatingPointNumber"`
	Int                 bool        `json:"int"`
	IntValue            int64       `json:"intValue"`
	IntegralNumber      bool        `json:"integralNumber"`
	Long                bool        `json:"long"`
	LongValue           int64       `json:"longValue"`
	MissingNode         bool        `json:"missingNode"`
	Null                bool        `json:"null"`
	Number              bool        `json:"number"`
	NumberType          string      `json:"numberType"`
	NumberValue         float64     `json:"numberValue"`
	Object              bool        `json:"object"`
	Pojo                bool        `json:"pojo"`
	TextValue           string      `json:"textValue"`
	Textual             bool        `json:"textual"`
	ValueAsBoolean      bool        `json:"valueAsBoolean"`
	ValueAsDouble       float64     `json:"valueAsDouble"`
	ValueAsInt          int64       `json:"valueAsInt"`
	ValueAsLong         int64       `json:"valueAsLong"`
	ValueAsText         string      `json:"valueAsText"`
	ValueNode           bool        `json:"valueNode"`
}

// JsonTypeBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The schema of a field.
type JsonTypeBean struct {
	Configuration map[string]interface{} `json:"configuration"`
	// Custom is the If the field is a custom field, the URI of the field.
	Custom string `json:"custom"`
	// CustomID is the If the field is a custom field, the custom ID of the field.
	CustomID int64 `json:"customId"`
	// Items is the When the data type is an array, the name of the field items within the array.
	Items string `json:"items"`
	// System is the If the field is a system field, the name of the field.
	System string `json:"system"`
	// Type is the The data type of the field.
	Type string `json:"type"`
}

// KeywordOperand is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// An operand that is a JQL keyword. See [Advanced searching - keywords reference](https://confluence.atlassian.com/jiracorecloud/advanced-searching-keywords-reference-765593717.html#Advancedsearching-keywordsreference-EMPTYEMPTY) for more information about operand keywords.
type KeywordOperand struct {
	// Keyword is the The keyword that is the operand value.
	Keyword string `json:"keyword"`
}

// LinkGroup is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details a link group, which defines issue operations.
type LinkGroup struct {
	Groups     []LinkGroup  `json:"groups"`
	Header     SimpleLink   `json:"header"`
	ID         string       `json:"id"`
	Links      []SimpleLink `json:"links"`
	StyleClass string       `json:"styleClass"`
	Weight     int64        `json:"weight"`
}

// LinkIssueRequestJsonBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type LinkIssueRequestJsonBean struct {
	Comment      Comment       `json:"comment"`
	InwardIssue  LinkedIssue   `json:"inwardIssue"`
	OutwardIssue LinkedIssue   `json:"outwardIssue"`
	Type         IssueLinkType `json:"type"`
}

// LinkedIssue is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The ID or key of a linked issue.
type LinkedIssue struct {
	// Fields is the The fields associated with the issue.
	Fields struct {
		*Fields `json:",inline"`
	} `json:"fields"`
	// ID is the The ID of an issue. Required if `key` isn't provided.
	ID string `json:"id"`
	// Key is the The key of an issue. Required if `id` isn't provided.
	Key string `json:"key"`
	// Self is the The URL of the issue.
	Self string `json:"self"`
}

// ListOperand is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// An operand that is a list of values.
type ListOperand struct {
	// Values is the The list of operand values.
	Values []JqlQueryUnitaryOperand `json:"values"`
}

// ListWrapperCallbackApplicationRole is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type ListWrapperCallbackApplicationRole struct {
}

// ListWrapperCallbackGroupName is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type ListWrapperCallbackGroupName struct {
}

// Locale is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of a locale.
type Locale struct {
	// Locale is the The locale code. The Java the locale format is used: a two character language code (ISO 639), an underscore, and two letter country code (ISO 3166). For example, en\_US represents a locale of English (United States). Required on create.
	Locale string `json:"locale"`
}

// MoveFieldBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type MoveFieldBean struct {
	// After is the The ID of the screen tab field after which to place the moved screen tab field. Required if `position` isn't provided.
	After string `json:"after"`
	// Position is the The named position to which the screen tab field should be moved. Required if `after` isn't provided.
	Position string `json:"position"`
}

// NestedResponse is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type NestedResponse struct {
	ErrorCollection ErrorCollection `json:"errorCollection"`
	Status          int64           `json:"status"`
}

// Notification is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about a notification.
type Notification struct {
	// HTMLBody is the The HTML body of the email notification for the issue.
	HTMLBody string `json:"htmlBody"`
	// Restrict is the Restricts the notifications to users with the specified permissions.
	Restrict struct {
		*NotificationRecipientsRestrictions `json:",inline"`
	} `json:"restrict"`
	// Subject is the The subject of the email notification for the issue. If this is not specified, then the subject is set to the issue key and summary.
	Subject string `json:"subject"`
	// TextBody is the The plain text body of the email notification for the issue.
	TextBody string `json:"textBody"`
	// To is the The recipients of the email notification for the issue.
	To struct {
		*NotificationRecipients `json:",inline"`
	} `json:"to"`
}

// NotificationEvent is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about a notification event.
type NotificationEvent struct {
	// Description is the The description of the event.
	Description string `json:"description"`
	// ID is the The ID of the event. The event can be a [Jira system event](https://confluence.atlassian.com/x/8YdKLg#Creatinganotificationscheme-eventsEvents) or a [custom event](https://confluence.atlassian.com/x/AIlKLg).
	ID int64 `json:"id"`
	// Name is the The name of the event.
	Name string `json:"name"`
	// TemplateEvent is the The template of the event. Only custom events configured by Jira administrators have template.
	TemplateEvent struct {
		*NotificationEvent `json:",inline"`
	} `json:"templateEvent"`
}

// NotificationRecipients is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of the users and groups to receive the notification.
type NotificationRecipients struct {
	// Assignee is the Whether the notification should be sent to the issue's assignees.
	Assignee bool `json:"assignee"`
	// Groups is the List of groups to receive the notification.
	Groups []GroupName `json:"groups"`
	// Reporter is the Whether the notification should be sent to the issue's reporter.
	Reporter bool `json:"reporter"`
	// Users is the List of users to receive the notification.
	Users []UserDetails `json:"users"`
	// Voters is the Whether the notification should be sent to the issue's voters.
	Voters bool `json:"voters"`
	// Watchers is the Whether the notification should be sent to the issue's watchers.
	Watchers bool `json:"watchers"`
}

// NotificationRecipientsRestrictions is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of the group membership or permissions needed to receive the notification.
type NotificationRecipientsRestrictions struct {
	// Groups is the List of group memberships required to receive the notification.
	Groups []GroupName `json:"groups"`
	// Permissions is the List of permissions required to receive the notification.
	Permissions []RestrictedPermission `json:"permissions"`
}

// NotificationScheme is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about a notification scheme.
type NotificationScheme struct {
	// Description is the The description of the notification scheme.
	Description string `json:"description"`
	// Expand is the Expand options that include additional notification scheme details in the response.
	Expand string `json:"expand"`
	// ID is the The ID of the notification scheme.
	ID int64 `json:"id"`
	// Name is the The name of the notification scheme.
	Name string `json:"name"`
	// NotificationSchemeEvents is the The notification events and associated recipients.
	NotificationSchemeEvents []NotificationSchemeEvent `json:"notificationSchemeEvents"`
	// Scope is the The scope of the notification scheme.
	Scope struct {
		*Scope `json:",inline"`
	} `json:"scope"`
	Self string `json:"self"`
}

// NotificationSchemeEvent is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about a notification scheme event.
type NotificationSchemeEvent struct {
	Event         NotificationEvent   `json:"event"`
	Notifications []EventNotification `json:"notifications"`
}

// OperationMessage is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type OperationMessage struct {
	// Message is the The human-readable message that describes the result.
	Message string `json:"message"`
	// StatusCode is the The status code of the response.
	StatusCode int64 `json:"statusCode"`
}

// Operations is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of the operations that can be performed on the issue.
type Operations struct {
	// LinkGroups is the Details of the link groups defining issue operations.
	LinkGroups []LinkGroup `json:"linkGroups"`
}

// OrderOfCustomFieldOptions is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// An ordered list of custom field option IDs and information on where to move them.
type OrderOfCustomFieldOptions struct {
	// After is the The ID of the custom field option or cascading option to place the moved options after. Required if `position` isn't provided.
	After                string   `json:"after"`
	CustomFieldOptionIds []string `json:"customFieldOptionIds"`
	// Position is the The position the custom field options should be moved to. Required if `after` isn't provided.
	Position string `json:"position"`
}

// OrderOfIssueTypes is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// An ordered list of issue type IDs and information about where to move them.
type OrderOfIssueTypes struct {
	// After is the The ID of the issue type to place the moved issue types after. Required if `position` isn't provided.
	After        string   `json:"after"`
	IssueTypeIds []string `json:"issueTypeIds"`
	// Position is the The position the issue types should be moved to. Required if `after` isn't provided.
	Position string `json:"position"`
}

// PageBeanChangelog is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanChangelog struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []Changelog `json:"values"`
}

// PageBeanComment is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanComment struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []Comment `json:"values"`
}

// PageBeanComponentWithIssueCount is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanComponentWithIssueCount struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []ComponentWithIssueCount `json:"values"`
}

// PageBeanContext is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanContext struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []Context `json:"values"`
}

// PageBeanCustomFieldContextOption is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanCustomFieldContextOption struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []CustomFieldContextOption `json:"values"`
}

// PageBeanCustomFieldOptionDetails is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanCustomFieldOptionDetails struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []CustomFieldOptionDetails `json:"values"`
}

// PageBeanDashboard is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanDashboard struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []Dashboard `json:"values"`
}

// PageBeanField is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanField struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []Field `json:"values"`
}

// PageBeanFieldConfiguration is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanFieldConfiguration struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []FieldConfiguration `json:"values"`
}

// PageBeanFieldConfigurationIssueTypeItem is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanFieldConfigurationIssueTypeItem struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []FieldConfigurationIssueTypeItem `json:"values"`
}

// PageBeanFieldConfigurationItem is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanFieldConfigurationItem struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []FieldConfigurationItem `json:"values"`
}

// PageBeanFieldConfigurationScheme is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanFieldConfigurationScheme struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []FieldConfigurationScheme `json:"values"`
}

// PageBeanFieldConfigurationSchemeProjects is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanFieldConfigurationSchemeProjects struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []FieldConfigurationSchemeProjects `json:"values"`
}

// PageBeanFilterDetails is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanFilterDetails struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []FilterDetails `json:"values"`
}

// PageBeanGroupDetails is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanGroupDetails struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []GroupDetails `json:"values"`
}

// PageBeanIssueFieldOption is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanIssueFieldOption struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []IssueFieldOption `json:"values"`
}

// PageBeanIssueSecurityLevelMember is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanIssueSecurityLevelMember struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []IssueSecurityLevelMember `json:"values"`
}

// PageBeanIssueTypeScheme is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanIssueTypeScheme struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []IssueTypeScheme `json:"values"`
}

// PageBeanIssueTypeSchemeMapping is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanIssueTypeSchemeMapping struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []IssueTypeSchemeMapping `json:"values"`
}

// PageBeanIssueTypeSchemeProjects is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanIssueTypeSchemeProjects struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []IssueTypeSchemeProjects `json:"values"`
}

// PageBeanIssueTypeScreenScheme is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanIssueTypeScreenScheme struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []IssueTypeScreenScheme `json:"values"`
}

// PageBeanIssueTypeScreenSchemeItem is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanIssueTypeScreenSchemeItem struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []IssueTypeScreenSchemeItem `json:"values"`
}

// PageBeanIssueTypeScreenSchemesProjects is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanIssueTypeScreenSchemesProjects struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []IssueTypeScreenSchemesProjects `json:"values"`
}

// PageBeanNotificationScheme is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanNotificationScheme struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []NotificationScheme `json:"values"`
}

// PageBeanProject is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanProject struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []Project `json:"values"`
}

// PageBeanScreen is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanScreen struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []Screen `json:"values"`
}

// PageBeanScreenScheme is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanScreenScheme struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []ScreenScheme `json:"values"`
}

// PageBeanString is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanString struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total  int64    `json:"total"`
	Values []string `json:"values"`
}

// PageBeanUser is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanUser struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []User `json:"values"`
}

// PageBeanUserDetails is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanUserDetails struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []UserDetails `json:"values"`
}

// PageBeanUserKey is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanUserKey struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []UserKey `json:"values"`
}

// PageBeanVersion is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanVersion struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []Version `json:"values"`
}

// PageBeanWebhook is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanWebhook struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []Webhook `json:"values"`
}

// PageBeanWorkflow is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanWorkflow struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []Workflow `json:"values"`
}

// PageBeanWorkflowScheme is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanWorkflowScheme struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []WorkflowScheme `json:"values"`
}

// PageBeanWorkflowTransitionRules is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of items.
type PageBeanWorkflowTransitionRules struct {
	// IsLast is the Whether this is the last page.
	IsLast bool `json:"isLast"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// NextPage is the If there is another page of results, the URL of the next page.
	NextPage string `json:"nextPage"`
	// Self is the The URL of the page.
	Self string `json:"self"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
	// Values is the The list of items.
	Values []WorkflowTransitionRules `json:"values"`
}

// PageOfChangelogs is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of changelogs.
type PageOfChangelogs struct {
	// Histories is the The list of changelogs.
	Histories []Changelog `json:"histories"`
	// MaxResults is the The maximum number of results that could be on the page.
	MaxResults int64 `json:"maxResults"`
	// StartAt is the The index of the first item returned on the page.
	StartAt int64 `json:"startAt"`
	// Total is the The number of results on the page.
	Total int64 `json:"total"`
}

// PageOfComments is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page of comments.
type PageOfComments struct {
	// Comments is the The list of comments.
	Comments []Comment `json:"comments"`
	// MaxResults is the The maximum number of items that could be returned.
	MaxResults int64 `json:"maxResults"`
	// StartAt is the The index of the first item returned.
	StartAt int64 `json:"startAt"`
	// Total is the The number of items returned.
	Total int64 `json:"total"`
}

// PageOfDashboards is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A page containing dashboard details.
type PageOfDashboards struct {
	// Dashboards is the List of dashboards.
	Dashboards []Dashboard `json:"dashboards"`
	// MaxResults is the The maximum number of results that could be on the page.
	MaxResults int64 `json:"maxResults"`
	// Next is the The URL of the next page of results, if any.
	Next string `json:"next"`
	// Prev is the The URL of the previous page of results, if any.
	Prev string `json:"prev"`
	// StartAt is the The index of the first item returned on the page.
	StartAt int64 `json:"startAt"`
	// Total is the The number of results on the page.
	Total int64 `json:"total"`
}

// PageOfWorklogs is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Paginated list of worklog details
type PageOfWorklogs struct {
	// MaxResults is the The maximum number of results that could be on the page.
	MaxResults int64 `json:"maxResults"`
	// StartAt is the The index of the first item returned on the page.
	StartAt int64 `json:"startAt"`
	// Total is the The number of results on the page.
	Total int64 `json:"total"`
	// Worklogs is the List of worklogs.
	Worklogs []Worklog `json:"worklogs"`
}

// PagedListUserDetailsApplicationUser is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A paged list. To access additional details append `[start-index:end-index]` to the expand request. For example, `?expand=sharedUsers[10:40]` returns a list starting at item 10 and finishing at item 40.
type PagedListUserDetailsApplicationUser struct {
	// EndIndex is the The index of the last item returned on the page.
	EndIndex int64 `json:"end-index"`
	// Items is the The list of items.
	Items []UserDetails `json:"items"`
	// MaxResults is the The maximum number of results that could be on the page.
	MaxResults int64 `json:"max-results"`
	// Size is the The number of items on the page.
	Size int64 `json:"size"`
	// StartIndex is the The index of the first item returned on the page.
	StartIndex int64 `json:"start-index"`
}

// ParsedJqlQueries is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A list of parsed JQL queries.
type ParsedJqlQueries struct {
	// Queries is the A list of parsed JQL queries.
	Queries []ParsedJqlQuery `json:"queries"`
}

// ParsedJqlQuery is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of a parsed JQL query.
type ParsedJqlQuery struct {
	Errors []string `json:"errors"`
	// Query is the The JQL query that was parsed and validated.
	Query string `json:"query"`
	// Structure is the The syntax tree of the query. Empty if the query was invalid.
	Structure struct {
		*JqlQuery `json:",inline"`
	} `json:"structure"`
}

// PermissionGrant is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about a permission granted to a user or group.
type PermissionGrant struct {
	// Holder is the The user or group being granted the permission. It consists of a `type` and a type-dependent `parameter`. See [Holder object](#holder-object) in *Get all permission schemes* for more information.
	Holder struct {
		*PermissionHolder `json:",inline"`
	} `json:"holder"`
	// ID is the The ID of the permission granted details.
	ID int64 `json:"id"`
	// Permission is the The permission to grant. This permission can be one of the built-in permissions or a custom permission added by an app. See [Built-in permissions](#built-in-permissions) in *Get all permission schemes* for more information about the built-in permissions. See the [project permission](https://developer.atlassian.com/cloud/jira/platform/modules/project-permission/) and [global permission](https://developer.atlassian.com/cloud/jira/platform/modules/global-permission/) module documentation for more information about custom permissions.
	Permission string `json:"permission"`
	// Self is the The URL of the permission granted details.
	Self string `json:"self"`
}

// PermissionGrants is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// List of permission grants.
type PermissionGrants struct {
	// Expand is the Expand options that include additional permission grant details in the response.
	Expand string `json:"expand"`
	// Permissions is the Permission grants list.
	Permissions []PermissionGrant `json:"permissions"`
}

// PermissionHolder is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of a user, group, field, or project role that holds a permission. See [Holder object](#holder-object) in *Get all permission schemes* for more information.
type PermissionHolder struct {
	// Expand is the Expand options that include additional permission holder details in the response.
	Expand string `json:"expand"`
	// Parameter is the The identifier of permission holder.
	Parameter string `json:"parameter"`
	// Type is the The type of permission holder.
	Type string `json:"type"`
}

// PermissionScheme is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of a permission scheme.
type PermissionScheme struct {
	// Description is the A description for the permission scheme.
	Description string `json:"description"`
	// Expand is the The expand options available for the permission scheme.
	Expand string `json:"expand"`
	// ID is the The ID of the permission scheme.
	ID int64 `json:"id"`
	// Name is the The name of the permission scheme. Must be unique.
	Name string `json:"name"`
	// Permissions is the The permission scheme to create or update. See [About permission schemes and grants](#about-permission-schemes-and-grants) for more information.
	Permissions []PermissionGrant `json:"permissions"`
	// Scope is the The scope of the permission scheme.
	Scope struct {
		*Scope `json:",inline"`
	} `json:"scope"`
	// Self is the The URL of the permission scheme.
	Self string `json:"self"`
}

// PermissionSchemes is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// List of all permission schemes.
type PermissionSchemes struct {
	// PermissionSchemes is the Permission schemes list.
	PermissionSchemes []PermissionScheme `json:"permissionSchemes"`
}

// Permissions is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about permissions.
type Permissions struct {
	Permissions map[string]UserPermission `json:"permissions"`
}

// PermissionsKeysBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type PermissionsKeysBean struct {
	Permissions []string `json:"permissions"`
}

// PermittedProjects is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A list of projects in which a user is granted permissions.
type PermittedProjects struct {
	// Projects is the A list of projects.
	Projects []ProjectIdentifierBean `json:"projects"`
}

// Priority is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// An issue priority.
type Priority struct {
	// Description is the The description of the issue priority.
	Description string `json:"description"`
	// IconURL is the The URL of the icon for the issue priority.
	IconURL string `json:"iconUrl"`
	// ID is the The ID of the issue priority.
	ID string `json:"id"`
	// Name is the The name of the issue priority.
	Name string `json:"name"`
	// Self is the The URL of the issue priority.
	Self string `json:"self"`
	// StatusColor is the The color used to indicate the issue priority.
	StatusColor string `json:"statusColor"`
}

// Project is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about a project.
type Project struct {
	// Archived is the Whether the project is archived.
	Archived bool `json:"archived"`
	// ArchivedBy is the The user who archived the project.
	ArchivedBy struct {
		*User `json:",inline"`
	} `json:"archivedBy"`
	// ArchivedDate is the The date when the project was archived.
	ArchivedDate string `json:"archivedDate"`
	// AssigneeType is the The default assignee when creating issues for this project.
	AssigneeType string `json:"assigneeType"`
	// AvatarUrls is the The URLs of the project's avatars.
	AvatarUrls struct {
		*AvatarUrlsBean `json:",inline"`
	} `json:"avatarUrls"`
	// Components is the List of the components contained in the project.
	Components []Component `json:"components"`
	// Deleted is the Whether the project is marked as deleted.
	Deleted bool `json:"deleted"`
	// DeletedBy is the The user who marked the project as deleted.
	DeletedBy struct {
		*User `json:",inline"`
	} `json:"deletedBy"`
	// DeletedDate is the The date when the project was marked as deleted.
	DeletedDate string `json:"deletedDate"`
	// Description is the A brief description of the project.
	Description string `json:"description"`
	// Email is the An email address associated with the project.
	Email string `json:"email"`
	// Expand is the Expand options that include additional project details in the response.
	Expand string `json:"expand"`
	// Favourite is the Whether the project is selected as a favorite.
	Favourite bool `json:"favourite"`
	// ID is the The ID of the project.
	ID string `json:"id"`
	// Insight is the Insights about the project.
	Insight struct {
		*ProjectInsight `json:",inline"`
	} `json:"insight"`
	// IsPrivate is the Whether the project is private.
	IsPrivate bool `json:"isPrivate"`
	// IssueTypeHierarchy is the The issue type hierarchy for the project
	IssueTypeHierarchy struct {
		*Hierarchy `json:",inline"`
	} `json:"issueTypeHierarchy"`
	// IssueTypes is the List of the issue types available in the project.
	IssueTypes []IssueTypeDetails `json:"issueTypes"`
	// Key is the The key of the project.
	Key string `json:"key"`
	// Lead is the The username of the project lead.
	Lead struct {
		*User `json:",inline"`
	} `json:"lead"`
	// Name is the The name of the project.
	Name string `json:"name"`
	// Permissions is the User permissions on the project
	Permissions struct {
		*ProjectPermissions `json:",inline"`
	} `json:"permissions"`
	// ProjectCategory is the The category the project belongs to.
	ProjectCategory struct {
		*ProjectCategory `json:",inline"`
	} `json:"projectCategory"`
	// ProjectTypeKey is the The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.
	ProjectTypeKey string                 `json:"projectTypeKey"`
	Properties     map[string]interface{} `json:"properties"`
	// RetentionTillDate is the The date when the project is deleted permanently.
	RetentionTillDate string `json:"retentionTillDate"`
	Roles             string `json:"roles"`
	// Self is the The URL of the project details.
	Self string `json:"self"`
	// Simplified is the Whether the project is simplified.
	Simplified bool `json:"simplified"`
	// Style is the The type of the project.
	Style string `json:"style"`
	// URL is the A link to information about this project, such as project documentation.
	URL string `json:"url"`
	// UuID is the Unique ID for next-gen projects.
	UuID string `json:"uuid"`
	// Versions is the The versions defined in the project. For more information, see [Create version](#api-rest-api-3-version-post).
	Versions []Version `json:"versions"`
}

// ProjectAvatars is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// List of project avatars.
type ProjectAvatars struct {
	// Custom is the List of avatars added to Jira. These avatars may be deleted.
	Custom []Avatar `json:"custom"`
	// System is the List of avatars included with Jira. These avatars cannot be deleted.
	System []Avatar `json:"system"`
}

// ProjectCategory is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A project category.
type ProjectCategory struct {
	// Description is the The description of the project category. Required on create, optional on update.
	Description string `json:"description"`
	// ID is the The ID of the project category.
	ID string `json:"id"`
	// Name is the The name of the project category. Required on create, optional on update.
	Name string `json:"name"`
	// Self is the The URL of the project category.
	Self string `json:"self"`
}

// ProjectEmailAddress is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A project's sender email address.
type ProjectEmailAddress struct {
	// EmailAddress is the The email address.
	EmailAddress string `json:"emailAddress"`
}

// ProjectForScope is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about a next-gen project.
type ProjectForScope struct {
	// AvatarUrls is the The URLs of the project's avatars.
	AvatarUrls struct {
		*AvatarUrlsBean `json:",inline"`
	} `json:"avatarUrls"`
	// ID is the The ID of the project.
	ID string `json:"id"`
	// Key is the The key of the project.
	Key string `json:"key"`
	// Name is the The name of the project.
	Name string `json:"name"`
	// ProjectCategory is the The category the project belongs to.
	ProjectCategory struct {
		*UpdatedProjectCategory `json:",inline"`
	} `json:"projectCategory"`
	// ProjectTypeKey is the The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.
	ProjectTypeKey string `json:"projectTypeKey"`
	// Self is the The URL of the project details.
	Self string `json:"self"`
	// Simplified is the Whether or not the project is simplified.
	Simplified bool `json:"simplified"`
}

// ProjectIdentifierBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The identifiers for a project.
type ProjectIdentifierBean struct {
	// ID is the The ID of the project.
	ID int64 `json:"id"`
	// Key is the The key of the project.
	Key string `json:"key"`
}

// ProjectIdentifiers is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Identifiers for a project.
type ProjectIdentifiers struct {
	// ID is the The ID of the created project.
	ID int64 `json:"id"`
	// Key is the The key of the created project.
	Key string `json:"key"`
	// Self is the The URL of the created project.
	Self string `json:"self"`
}

// ProjectInputBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type ProjectInputBean struct {
	// AssigneeType is the The default assignee when creating issues for this project.
	AssigneeType string `json:"assigneeType"`
	// AvatarID is the An integer value for the project's avatar.
	AvatarID int64 `json:"avatarId"`
	// CategoryID is the The ID of the project's category. A complete list of category IDs is found using the [Get all project categories](#api-rest-api-3-projectCategory-get) operation.
	CategoryID int64 `json:"categoryId"`
	// Description is the A brief description of the project.
	Description string `json:"description"`
	// IssueSecurityScheme is the The ID of the issue security scheme for the project, which enables you to control who can and cannot view issues. Use the [Get issue security schemes](#api-rest-api-3-issuesecurityschemes-get) resource to get all issue security scheme IDs.
	IssueSecurityScheme int64 `json:"issueSecurityScheme"`
	// Key is the Project keys must be unique and start with an uppercase letter followed by one or more uppercase alphanumeric characters. The maximum length is 10 characters. Required when creating a project. Optional when updating a project.
	Key string `json:"key"`
	// Lead is the This parameter is deprecated because of privacy changes. Use `leadAccountId` instead. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. The user name of the project lead. Either `lead` or `leadAccountId` must be set when creating a project. Optional when updating a project. Cannot be provided with `leadAccountId`.
	Lead string `json:"lead"`
	// LeadAccountID is the The account ID of the project lead. Either `lead` or `leadAccountId` must be set when creating a project. Optional when updating a project. Cannot be provided with `lead`.
	LeadAccountID string `json:"leadAccountId"`
	// Name is the The name of the project. Required when creating a project. Optional when updating a project.
	Name string `json:"name"`
	// NotificationScheme is the The ID of the notification scheme for the project. Use the [Get notification schemes](#api-rest-api-3-notificationscheme-get) resource to get a list of notification scheme IDs.
	NotificationScheme int64 `json:"notificationScheme"`
	// PermissionScheme is the The ID of the permission scheme for the project. Use the [Get all permission schemes](#api-rest-api-3-permissionscheme-get) resource to see a list of all permission scheme IDs.
	PermissionScheme int64 `json:"permissionScheme"`
	// ProjectTemplateKey is the A prebuilt configuration for a project. The type of the `projectTemplateKey` must match with the type of the `projectTypeKey`. Required when creating a project. Not applicable for the Update project resource.
	ProjectTemplateKey string `json:"projectTemplateKey"`
	// ProjectTypeKey is the The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes), which dictates the application-specific feature set. Required when creating a project. Not applicable for the Update project resource.
	ProjectTypeKey string `json:"projectTypeKey"`
	// URL is the A link to information about this project, such as project documentation
	URL string `json:"url"`
}

// ProjectInsight is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Additional details about a project.
type ProjectInsight struct {
	// LastIssueUpdateTime is the The last issue update time.
	LastIssueUpdateTime string `json:"lastIssueUpdateTime"`
	// TotalIssueCount is the Total issue count.
	TotalIssueCount int64 `json:"totalIssueCount"`
}

// ProjectIssueCreateMetadata is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of the issue creation metadata for a project.
type ProjectIssueCreateMetadata struct {
	// AvatarUrls is the List of the project's avatars, returning the avatar size and associated URL.
	AvatarUrls struct {
		*AvatarUrlsBean `json:",inline"`
	} `json:"avatarUrls"`
	// Expand is the Expand options that include additional project issue create metadata details in the response.
	Expand string `json:"expand"`
	// ID is the The ID of the project.
	ID string `json:"id"`
	// Issuetypes is the List of the issue types supported by the project.
	Issuetypes []IssueTypeIssueCreateMetadata `json:"issuetypes"`
	// Key is the The key of the project.
	Key string `json:"key"`
	// Name is the The name of the project.
	Name string `json:"name"`
	// Self is the The URL of the project.
	Self string `json:"self"`
}

// ProjectIssueSecurityLevels is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// List of issue level security items in a project.
type ProjectIssueSecurityLevels struct {
	// Levels is the Issue level security items list.
	Levels []SecurityLevel `json:"levels"`
}

// ProjectIssueTypeHierarchy is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The hierarchy of issue types within a project.
type ProjectIssueTypeHierarchy struct {
	// Hierarchy is the Details of an issue type hierarchy level.
	Hierarchy []ProjectIssueTypesHierarchyLevel `json:"hierarchy"`
	// ProjectID is the The ID of the project.
	ProjectID int64 `json:"projectId"`
}

// ProjectIssueTypesHierarchyLevel is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of an issue type hierarchy level.
type ProjectIssueTypesHierarchyLevel struct {
	// EntityID is the The ID of the issue type hierarchy level.
	EntityID string `json:"entityId"`
	// IssueTypes is the The list of issue types in the hierarchy level.
	IssueTypes []IssueTypeInfo `json:"issueTypes"`
	// Level is the The level of the issue type hierarchy level.
	Level int64 `json:"level"`
	// Name is the The name of the issue type hierarchy level.
	Name string `json:"name"`
}

// ProjectPermissions is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Permissions which a user has on a project.
type ProjectPermissions struct {
	// CanEdit is the Whether the logged user can edit the project.
	CanEdit bool `json:"canEdit"`
}

// ProjectRole is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about the roles in a project.
type ProjectRole struct {
	// Actors is the The list of users who act in this role.
	Actors []RoleActor `json:"actors"`
	// Admin is the Whether this role is the admin role for the project.
	Admin bool `json:"admin"`
	// CurrentUserRole is the Whether the calling user is part of this role.
	CurrentUserRole bool `json:"currentUserRole"`
	// Default is the Whether this role is the default role for the project
	Default bool `json:"default"`
	// Description is the The description of the project role.
	Description string `json:"description"`
	// ID is the The ID of the project role.
	ID int64 `json:"id"`
	// Name is the The name of the project role.
	Name string `json:"name"`
	// RoleConfigurable is the Whether the roles are configurable for this project.
	RoleConfigurable bool `json:"roleConfigurable"`
	// Scope is the The scope of the role. Indicated for roles associated with [next-gen projects](https://confluence.atlassian.com/x/loMyO).
	Scope struct {
		*Scope `json:",inline"`
	} `json:"scope"`
	// Self is the The URL the project role details.
	Self string `json:"self"`
	// TranslatedName is the The translated name of the project role.
	TranslatedName string `json:"translatedName"`
}

// ProjectRoleActorsUpdateBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type ProjectRoleActorsUpdateBean struct {
	CategorisedActors []string `json:"categorisedActors"`
	// ID is the The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.
	ID int64 `json:"id"`
}

// ProjectRoleGroup is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of the group associated with the role.
type ProjectRoleGroup struct {
	// DisplayName is the The display name of the group.
	DisplayName string `json:"displayName"`
	// Name is the The name of the group
	Name string `json:"name"`
}

// ProjectRoleUser is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of the user associated with the role.
type ProjectRoleUser struct {
	// AccountID is the The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Returns *unknown* if the record is deleted and corrupted, for example, as the result of a server import.
	AccountID string `json:"accountId"`
}

// ProjectScopeBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type ProjectScopeBean struct {
	Attributes []string `json:"attributes"`
	// ID is the The ID of the project that the option's behavior applies to.
	ID int64 `json:"id"`
}

// ProjectType is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about a project type.
type ProjectType struct {
	// Color is the The color of the project type.
	Color string `json:"color"`
	// DescriptionI18nKey is the The key of the project type's description.
	DescriptionI18nKey string `json:"descriptionI18nKey"`
	// FormattedKey is the The formatted key of the project type.
	FormattedKey string `json:"formattedKey"`
	// Icon is the The icon of the project type.
	Icon string `json:"icon"`
	// Key is the The key of the project type.
	Key string `json:"key"`
}

// PropertyKey is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Property key details.
type PropertyKey struct {
	// Key is the The key of the property.
	Key string `json:"key"`
	// Self is the The URL of the property.
	Self string `json:"self"`
}

// PropertyKeys is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// List of property keys.
type PropertyKeys struct {
	// Keys is the Property key details.
	Keys []PropertyKey `json:"keys"`
}

// PublishedWorkflowID is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Properties that identify a published workflow.
type PublishedWorkflowID struct {
	// Name is the The name of the workflow.
	Name string `json:"name"`
}

// RegisteredWebhook is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// ID of a registered webhook or error messages explaining why a webhook wasn't registered.
type RegisteredWebhook struct {
	// CreatedWebhookID is the The ID of the webhook. Returned if the webhook is created.
	CreatedWebhookID int64 `json:"createdWebhookId"`
	// Errors is the Error messages specifying why the webhook creation failed.
	Errors []string `json:"errors"`
}

// RemoteIssueLink is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of an issue remote link.
type RemoteIssueLink struct {
	// Application is the Details of the remote application the linked item is in.
	Application struct {
		*Application `json:",inline"`
	} `json:"application"`
	// GlobalID is the The global ID of the link, such as the ID of the item on the remote system.
	GlobalID string `json:"globalId"`
	// ID is the The ID of the link.
	ID int64 `json:"id"`
	// Object is the Details of the item linked to.
	Object struct {
		*RemoteObject `json:",inline"`
	} `json:"object"`
	// Relationship is the Description of the relationship between the issue and the linked item.
	Relationship string `json:"relationship"`
	// Self is the The URL of the link.
	Self string `json:"self"`
}

// RemoteIssueLinkIdentifies is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of the identifiers for a created or updated remote issue link.
type RemoteIssueLinkIdentifies struct {
	// ID is the The ID of the remote issue link, such as the ID of the item on the remote system.
	ID int64 `json:"id"`
	// Self is the The URL of the remote issue link.
	Self string `json:"self"`
}

// RemoteIssueLinkRequest is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of a remote issue link.
type RemoteIssueLinkRequest struct {
	// Application is the Details of the remote application the linked item is in. For example, trello.
	Application struct {
		*Application `json:",inline"`
	} `json:"application"`
	// GlobalID is the An identifier for the remote item in the remote system. For example, the global ID for a remote item in Confluence would consist of the app ID and page ID, like this: `appId=456&pageId=123`.
	//
	// Setting this field enables the remote issue link details to be updated or deleted using remote system and item details as the record identifier, rather than using the record's Jira ID.
	//
	// The maximum length is 255 characters.
	GlobalID string `json:"globalId"`
	// Object is the Details of the item linked to.
	Object struct {
		*RemoteObject `json:",inline"`
	} `json:"object"`
	// Relationship is the Description of the relationship between the issue and the linked item. If not set, the relationship description "links to" is used in Jira.
	Relationship string `json:"relationship"`
}

// RemoteObject is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The linked item.
type RemoteObject struct {
	// Icon is the Details of the icon for the item. If no icon is defined, the default link icon is used in Jira.
	Icon struct {
		*Icon `json:",inline"`
	} `json:"icon"`
	// Status is the The status of the item.
	Status struct {
		*Status `json:",inline"`
	} `json:"status"`
	// Summary is the The summary details of the item.
	Summary string `json:"summary"`
	// Title is the The title of the item.
	Title string `json:"title"`
	// URL is the The URL of the item.
	URL string `json:"url"`
}

// RemoveOptionFromIssuesResult is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type RemoveOptionFromIssuesResult struct {
	// Errors is the A collection of errors related to unchanged issues. The collection size is limited, which means not all errors may be returned.
	Errors struct {
		*SimpleErrorCollection `json:",inline"`
	} `json:"errors"`
	ModifiedIssues   []int64 `json:"modifiedIssues"`
	UnmodifiedIssues []int64 `json:"unmodifiedIssues"`
}

// RenamedCascadingOption is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of a custom field cascading option to rename.
type RenamedCascadingOption struct {
	// NewValue is the The new value of the cascading option.
	NewValue string `json:"newValue"`
	// Value is the The value of the cascading option.
	Value string `json:"value"`
}

// RenamedOption is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of a custom field option to rename.
type RenamedOption struct {
	// CascadingOptions is the The new values for the cascading options of this option. Only used for Select List (cascading) fields.
	CascadingOptions []RenamedCascadingOption `json:"cascadingOptions"`
	// NewValue is the The new value of the option.
	NewValue string `json:"newValue"`
	// Value is the The current option value.
	Value string `json:"value"`
}

// Resolution is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of an issue resolution.
type Resolution struct {
	// Description is the The description of the issue resolution.
	Description string `json:"description"`
	// ID is the The ID of the issue resolution.
	ID string `json:"id"`
	// Name is the The name of the issue resolution.
	Name string `json:"name"`
	// Self is the The URL of the issue resolution.
	Self string `json:"self"`
}

// RestrictedPermission is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of the permission.
type RestrictedPermission struct {
	// ID is the The ID of the permission. Either `id` or `key` must be specified. Use [Get all permissions](#api-rest-api-3-permissions-get) to get the list of permissions.
	ID string `json:"id"`
	// Key is the The key of the permission. Either `id` or `key` must be specified. Use [Get all permissions](#api-rest-api-3-permissions-get) to get the list of permissions.
	Key string `json:"key"`
}

// RichText is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type RichText struct {
	EmptyAdf bool `json:"emptyAdf"`
	ValueSet bool `json:"valueSet"`
}

// RoleActor is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about a user assigned to a project role.
type RoleActor struct {
	ActorGroup struct {
		*ProjectRoleGroup `json:",inline"`
	} `json:"actorGroup"`
	ActorUser struct {
		*ProjectRoleUser `json:",inline"`
	} `json:"actorUser"`
	// AvatarURL is the The avatar of the role actor.
	AvatarURL string `json:"avatarUrl"`
	// DisplayName is the The display name of the role actor. For users, depending on the user’s privacy setting, this may return an alternative value for the user's name.
	DisplayName string `json:"displayName"`
	// ID is the The ID of the role actor.
	ID int64 `json:"id"`
	// Name is the This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
	Name string `json:"name"`
	// Type is the The type of role actor.
	Type string `json:"type"`
}

// RuleConfiguration is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A rule configuration.
type RuleConfiguration struct {
	// Value is the Configuration of the rule, as it is stored by the Connect app on the rule configuration page.
	Value string `json:"value"`
}

// Scope is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The projects the item is associated with. Indicated for items associated with [next-gen projects](https://confluence.atlassian.com/x/loMyO).
type Scope struct {
	// Project is the The project the item has scope in.
	Project struct {
		*ProjectForScope `json:",inline"`
	} `json:"project"`
	// Type is the The type of scope.
	Type string `json:"type"`
}

// Screen is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A screen.
type Screen struct {
	// Description is the The description of the screen.
	Description string `json:"description"`
	// ID is the The ID of the screen.
	ID int64 `json:"id"`
	// Name is the The name of the screen.
	Name string `json:"name"`
	// Scope is the The scope of the screen.
	Scope struct {
		*Scope `json:",inline"`
	} `json:"scope"`
}

// ScreenDetails is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of a screen.
type ScreenDetails struct {
	// Description is the The description of the screen. The maximum length is 255 characters.
	Description string `json:"description"`
	// Name is the The name of the screen. The name must be unique. The maximum length is 255 characters.
	Name string `json:"name"`
}

// ScreenID is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// ID of a screen.
type ScreenID struct {
	// ID is the The ID of the screen.
	ID string `json:"id"`
}

// ScreenScheme is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A screen scheme.
type ScreenScheme struct {
	// Description is the The description of the screen scheme.
	Description string `json:"description"`
	// ID is the The ID of the screen scheme.
	ID int64 `json:"id"`
	// Name is the The name of the screen scheme.
	Name string `json:"name"`
	// Screens is the The IDs of the screens for the screen types of the screen scheme.
	Screens struct {
		*ScreenTypes `json:",inline"`
	} `json:"screens"`
}

// ScreenSchemeDetails is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of a screen scheme.
type ScreenSchemeDetails struct {
	// Description is the The description of the screen scheme. The maximum length is 255 characters.
	Description string `json:"description"`
	// Name is the The name of the screen scheme. The name must be unique. The maximum length is 255 characters.
	Name string `json:"name"`
	// Screens is the The IDs of the screens for the screen types of the screen scheme. Only screens used in classic projects are accepted.
	Screens struct {
		*ScreenTypes `json:",inline"`
	} `json:"screens"`
}

// ScreenSchemeID is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The ID of a screen scheme.
type ScreenSchemeID struct {
	// ID is the The ID of the screen scheme.
	ID int64 `json:"id"`
}

// ScreenTypes is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The IDs of the screens for the screen types of the screen scheme.
type ScreenTypes struct {
	// Create is the The ID of the create screen.
	Create int64 `json:"create"`
	// Default is the The ID of the default screen. Required when creating a screen scheme.
	Default int64 `json:"default"`
	// Edit is the The ID of the edit screen.
	Edit int64 `json:"edit"`
	// View is the The ID of the view screen.
	View int64 `json:"view"`
}

// ScreenableField is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A screen tab field.
type ScreenableField struct {
	// ID is the The ID of the screen tab field.
	ID string `json:"id"`
	// Name is the The name of the screen tab field. Required on create and update. The maximum length is 255 characters.
	Name string `json:"name"`
}

// ScreenableTab is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A screen tab.
type ScreenableTab struct {
	// ID is the The ID of the screen tab.
	ID int64 `json:"id"`
	// Name is the The name of the screen tab. The maximum length is 255 characters.
	Name string `json:"name"`
}

// SearchRequestBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type SearchRequestBean struct {
	Expand []string `json:"expand"`
	Fields []string `json:"fields"`
	// FieldsByKeys is the Reference fields by their key (rather than ID). The default is `false`.
	FieldsByKeys bool `json:"fieldsByKeys"`
	// Jql is the A [JQL](https://confluence.atlassian.com/x/egORLQ) expression.
	Jql string `json:"jql"`
	// MaxResults is the The maximum number of items to return per page.
	MaxResults int64    `json:"maxResults"`
	Properties []string `json:"properties"`
	// StartAt is the The index of the first item to return in the page of results (page offset). The base index is `0`.
	StartAt int64 `json:"startAt"`
	// ValidateQuery is the Determines how to validate the JQL query and treat the validation results. Supported values:
	//
	//  *  `strict` Returns a 400 response code if any errors are found, along with a list of all errors (and warnings).
	//  *  `warn` Returns all errors as warnings.
	//  *  `none` No validation is performed.
	//  *  `true` *Deprecated* A legacy synonym for `strict`.
	//  *  `false` *Deprecated* A legacy synonym for `warn`.
	//
	// The default is `strict`.
	//
	// Note: If the JQL is not correctly formed a 400 response code is returned, regardless of the `validateQuery` value.
	ValidateQuery string `json:"validateQuery"`
}

// SearchResults is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The result of a JQL search.
type SearchResults struct {
	// Expand is the Expand options that include additional search result details in the response.
	Expand string `json:"expand"`
	// Issues is the The list of issues found by the search.
	Issues []IssueBean `json:"issues"`
	// MaxResults is the The maximum number of results that could be on the page.
	MaxResults int64                   `json:"maxResults"`
	Names      string                  `json:"names"`
	Schema     map[string]JsonTypeBean `json:"schema"`
	// StartAt is the The index of the first item returned on the page.
	StartAt int64 `json:"startAt"`
	// Total is the The number of results on the page.
	Total           int64    `json:"total"`
	WarningMessages []string `json:"warningMessages"`
}

// SecurityLevel is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of an issue level security item.
type SecurityLevel struct {
	// Description is the The description of the issue level security item.
	Description string `json:"description"`
	// ID is the The ID of the issue level security item.
	ID string `json:"id"`
	// Name is the The name of the issue level security item.
	Name string `json:"name"`
	// Self is the The URL of the issue level security item.
	Self string `json:"self"`
}

// SecurityScheme is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about a security scheme.
type SecurityScheme struct {
	// DefaultSecurityLevelID is the The ID of the default security level.
	DefaultSecurityLevelID int64 `json:"defaultSecurityLevelId"`
	// Description is the The description of the issue security scheme.
	Description string `json:"description"`
	// ID is the The ID of the issue security scheme.
	ID     int64           `json:"id"`
	Levels []SecurityLevel `json:"levels"`
	// Name is the The name of the issue security scheme.
	Name string `json:"name"`
	// Self is the The URL of the issue security scheme.
	Self string `json:"self"`
}

// SecuritySchemes is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// List of security schemes.
type SecuritySchemes struct {
	// IssueSecuritySchemes is the List of security schemes.
	IssueSecuritySchemes []SecurityScheme `json:"issueSecuritySchemes"`
}

// ServerInformation is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about the Jira instance.
type ServerInformation struct {
	// BaseURL is the The base URL of the Jira instance.
	BaseURL string `json:"baseUrl"`
	// BuildDate is the The timestamp when the Jira version was built.
	BuildDate string `json:"buildDate"`
	// BuildNumber is the The build number of the Jira version.
	BuildNumber int64 `json:"buildNumber"`
	// DeploymentType is the The type of server deployment. This is always returned as *Cloud*.
	DeploymentType string `json:"deploymentType"`
	// HealthChecks is the Jira instance health check results. Deprecated and no longer returned.
	HealthChecks []HealthCheckResult `json:"healthChecks"`
	// ScmInfo is the The unique identifier of the Jira version.
	ScmInfo string `json:"scmInfo"`
	// ServerTime is the The time in Jira when this request was responded to.
	ServerTime string `json:"serverTime"`
	// ServerTitle is the The name of the Jira instance.
	ServerTitle string `json:"serverTitle"`
	// Version is the The version of Jira.
	Version        string  `json:"version"`
	VersionNumbers []int64 `json:"versionNumbers"`
}

// SharePermission is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of a share permission for the filter.
type SharePermission struct {
	// Group is the The group that the filter is shared with. For a request, specify the `name` property for the group.
	Group struct {
		*GroupName `json:",inline"`
	} `json:"group"`
	// ID is the The unique identifier of the share permission.
	ID int64 `json:"id"`
	// Project is the The project that the filter is shared with. This is similar to the project object returned by [Get project](#api-rest-api-3-project-projectIdOrKey-get) but it contains a subset of the properties, which are: `self`, `id`, `key`, `assigneeType`, `name`, `roles`, `avatarUrls`, `projectType`, `simplified`.
	// For a request, specify the `id` for the project.
	Project struct {
		*Project `json:",inline"`
	} `json:"project"`
	// Role is the The project role that the filter is shared with.
	// For a request, specify the `id` for the role. You must also specify the `project` object and `id` for the project that the role is in.
	Role struct {
		*ProjectRole `json:",inline"`
	} `json:"role"`
	// Type is the The type of share permission:
	//
	//  *  `group` Shared with a group. If set in a request, then specify `sharePermission.group` as well.
	//  *  `project` Shared with a project. If set in a request, then specify `sharePermission.project` as well.
	//  *  `projectRole` Share with a project role in a project. This value is not returned in responses. It is used in requests, where it needs to be specify with `projectId` and `projectRoleId`.
	//  *  `global` Shared globally. If set in a request, no other `sharePermission` properties need to be specified.
	//  *  `loggedin` Shared with all logged-in users. Note: This value is set in a request by specifying `authenticated` as the `type`.
	//  *  `project-unknown` Shared with a project that the user does not have access to. Cannot be set in a request.
	Type string `json:"type"`
}

// SharePermissionInputBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type SharePermissionInputBean struct {
	// Groupname is the The name of the group to share the filter with. Set `type` to `group`.
	Groupname string `json:"groupname"`
	// ProjectID is the The ID of the project to share the filter with. Set `type` to `project`.
	ProjectID string `json:"projectId"`
	// ProjectRoleID is the The ID of the project role to share the filter with. Set `type` to `projectRole` and the `projectId` for the project that the role is in.
	ProjectRoleID string `json:"projectRoleId"`
	// Type is the The type of the share permission.Specify the type as follows:
	//
	//  *  `group` Share with a group. Specify `groupname` as well.
	//  *  `project` Share with a project. Specify `projectId` as well.
	//  *  `projectRole` Share with a project role in a project. Specify `projectId` and `projectRoleId` as well.
	//  *  `global` Share globally, including anonymous users. If set, this type overrides all existing share permissions and must be deleted before any non-global share permissions is set.
	//  *  `authenticated` Share with all logged-in users. This shows as `loggedin` in the response. If set, this type overrides all existing share permissions and must be deleted before any non-global share permissions is set.
	Type string `json:"type"`
}

// SimpleApplicationPropertyBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type SimpleApplicationPropertyBean struct {
	// ID is the The ID of the application property.
	ID string `json:"id"`
	// Value is the The new value.
	Value string `json:"value"`
}

// SimpleErrorCollection is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type SimpleErrorCollection struct {
	ErrorMessages  []string `json:"errorMessages"`
	Errors         string   `json:"errors"`
	HttpStatusCode int64    `json:"httpStatusCode"`
}

// SimpleLink is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about the operations available in this version.
type SimpleLink struct {
	Href       string `json:"href"`
	IconClass  string `json:"iconClass"`
	ID         string `json:"id"`
	Label      string `json:"label"`
	StyleClass string `json:"styleClass"`
	Title      string `json:"title"`
	Weight     int64  `json:"weight"`
}

// SimpleListWrapperApplicationRole is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type SimpleListWrapperApplicationRole struct {
	Callback       ListWrapperCallbackApplicationRole `json:"callback"`
	Items          []ApplicationRole                  `json:"items"`
	MaxResults     int64                              `json:"max-results"`
	PagingCallback ListWrapperCallbackApplicationRole `json:"pagingCallback"`
	Size           int64                              `json:"size"`
}

// SimpleListWrapperGroupName is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type SimpleListWrapperGroupName struct {
	Callback       ListWrapperCallbackGroupName `json:"callback"`
	Items          []GroupName                  `json:"items"`
	MaxResults     int64                        `json:"max-results"`
	PagingCallback ListWrapperCallbackGroupName `json:"pagingCallback"`
	Size           int64                        `json:"size"`
}

// Status is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The status of the item.
type Status struct {
	// Icon is the Details of the icon representing the status. If not provided, no status icon displays in Jira.
	Icon struct {
		*Icon `json:",inline"`
	} `json:"icon"`
	// Resolved is the Whether the item is resolved. If set to "true", the link to the issue is displayed in a strikethrough font, otherwise the link displays in normal font.
	Resolved bool `json:"resolved"`
}

// StatusCategory is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A status category.
type StatusCategory struct {
	// ColorName is the The name of the color used to represent the status category.
	ColorName string `json:"colorName"`
	// ID is the The ID of the status category.
	ID int64 `json:"id"`
	// Key is the The key of the status category.
	Key string `json:"key"`
	// Name is the The name of the status category.
	Name string `json:"name"`
	// Self is the The URL of the status category.
	Self string `json:"self"`
}

// StatusDetails is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A status.
type StatusDetails struct {
	// Description is the The description of the status.
	Description string `json:"description"`
	// IconURL is the The URL of the icon used to represent the status.
	IconURL string `json:"iconUrl"`
	// ID is the The ID of the status.
	ID string `json:"id"`
	// Name is the The name of the status.
	Name string `json:"name"`
	// Self is the The URL of the status.
	Self string `json:"self"`
	// StatusCategory is the The category assigned to the status.
	StatusCategory struct {
		*StatusCategory `json:",inline"`
	} `json:"statusCategory"`
}

// SuggestedIssue is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// An issue suggested for use in the issue picker auto-completion.
type SuggestedIssue struct {
	// ID is the The ID of the issue.
	ID int64 `json:"id"`
	// Img is the The URL of the issue type's avatar.
	Img string `json:"img"`
	// Key is the The key of the issue.
	Key string `json:"key"`
	// KeyHTML is the The key of the issue in HTML format.
	KeyHTML string `json:"keyHtml"`
	// Summary is the The phrase containing the query string in HTML format, with the string highlighted with HTML bold tags.
	Summary string `json:"summary"`
	// SummaryText is the The phrase containing the query string, as plain text.
	SummaryText string `json:"summaryText"`
}

// SystemAvatars is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// List of system avatars.
type SystemAvatars struct {
	// System is the A list of avatar details.
	System []Avatar `json:"system"`
}

// TaskProgressBeanObject is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about a task.
type TaskProgressBeanObject struct {
	// Description is the The description of the task.
	Description string `json:"description"`
	// ElapsedRuntime is the The execution time of the task, in milliseconds.
	ElapsedRuntime int64 `json:"elapsedRuntime"`
	// Finished is the A timestamp recording when the task was finished.
	Finished int64 `json:"finished"`
	// ID is the The ID of the task.
	ID string `json:"id"`
	// LastUpdate is the A timestamp recording when the task progress was last updated.
	LastUpdate int64 `json:"lastUpdate"`
	// Message is the Information about the progress of the task.
	Message string `json:"message"`
	// Progress is the The progress of the task, as a percentage complete.
	Progress int64 `json:"progress"`
	// Result is the The result of the task execution.
	Result interface{} `json:"result"`
	// Self is the The URL of the task.
	Self string `json:"self"`
	// Started is the A timestamp recording when the task was started.
	Started int64 `json:"started"`
	// Status is the The status of the task.
	Status string `json:"status"`
	// Submitted is the A timestamp recording when the task was submitted.
	Submitted int64 `json:"submitted"`
	// SubmittedBy is the The ID of the user who submitted the task.
	SubmittedBy int64 `json:"submittedBy"`
}

// TaskProgressBeanRemoveOptionFromIssuesResult is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about a task.
type TaskProgressBeanRemoveOptionFromIssuesResult struct {
	// Description is the The description of the task.
	Description string `json:"description"`
	// ElapsedRuntime is the The execution time of the task, in milliseconds.
	ElapsedRuntime int64 `json:"elapsedRuntime"`
	// Finished is the A timestamp recording when the task was finished.
	Finished int64 `json:"finished"`
	// ID is the The ID of the task.
	ID string `json:"id"`
	// LastUpdate is the A timestamp recording when the task progress was last updated.
	LastUpdate int64 `json:"lastUpdate"`
	// Message is the Information about the progress of the task.
	Message string `json:"message"`
	// Progress is the The progress of the task, as a percentage complete.
	Progress int64 `json:"progress"`
	// Result is the The result of the task execution.
	Result struct {
		*RemoveOptionFromIssuesResult `json:",inline"`
	} `json:"result"`
	// Self is the The URL of the task.
	Self string `json:"self"`
	// Started is the A timestamp recording when the task was started.
	Started int64 `json:"started"`
	// Status is the The status of the task.
	Status string `json:"status"`
	// Submitted is the A timestamp recording when the task was submitted.
	Submitted int64 `json:"submitted"`
	// SubmittedBy is the The ID of the user who submitted the task.
	SubmittedBy int64 `json:"submittedBy"`
}

// TimeTrackingConfiguration is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of the time tracking configuration.
type TimeTrackingConfiguration struct {
	// DefaultUnit is the The default unit of time applied to logged time.
	DefaultUnit string `json:"defaultUnit"`
	// TimeFormat is the The format that will appear on an issue's *Time Spent* field.
	TimeFormat string `json:"timeFormat"`
	// WorkingDaysPerWeek is the The number of days in a working week.
	WorkingDaysPerWeek float64 `json:"workingDaysPerWeek"`
	// WorkingHoursPerDay is the The number of hours in a working day.
	WorkingHoursPerDay float64 `json:"workingHoursPerDay"`
}

// TimeTrackingDetails is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Time tracking details.
type TimeTrackingDetails struct {
	// OriginalEstimate is the The original estimate of time needed for this issue in readable format.
	OriginalEstimate string `json:"originalEstimate"`
	// OriginalEstimateSeconds is the The original estimate of time needed for this issue in seconds.
	OriginalEstimateSeconds int64 `json:"originalEstimateSeconds"`
	// RemainingEstimate is the The remaining estimate of time needed for this issue in readable format.
	RemainingEstimate string `json:"remainingEstimate"`
	// RemainingEstimateSeconds is the The remaining estimate of time needed for this issue in seconds.
	RemainingEstimateSeconds int64 `json:"remainingEstimateSeconds"`
	// TimeSpent is the Time worked on this issue in readable format.
	TimeSpent string `json:"timeSpent"`
	// TimeSpentSeconds is the Time worked on this issue in seconds.
	TimeSpentSeconds int64 `json:"timeSpentSeconds"`
}

// TimeTrackingProvider is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about the time tracking provider.
type TimeTrackingProvider struct {
	// Key is the The key for the time tracking provider. For example, *JIRA*.
	Key string `json:"key"`
	// Name is the The name of the time tracking provider. For example, *JIRA provided time tracking*.
	Name string `json:"name"`
	// URL is the The URL of the configuration page for the time tracking provider app. For example, */example/config/url*. This property is only returned if the `adminPageKey` property is set in the module descriptor of the time tracking provider app.
	URL string `json:"url"`
}

// Transition is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of a workflow transition.
type Transition struct {
	// Description is the The description of the transition.
	Description string `json:"description"`
	// From is the The statuses the transition can start from.
	From []string `json:"from"`
	// ID is the The ID of the transition.
	ID string `json:"id"`
	// Name is the The name of the transition.
	Name   string        `json:"name"`
	Rules  WorkflowRules `json:"rules"`
	Screen ScreenID      `json:"screen"`
	// To is the The status the transition goes to.
	To string `json:"to"`
	// Type is the The type of the transition.
	Type string `json:"type"`
}

// Transitions is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// List of issue transitions.
type Transitions struct {
	// Expand is the Expand options that include additional transitions details in the response.
	Expand string `json:"expand"`
	// Transitions is the List of issue transitions.
	Transitions []IssueTransition `json:"transitions"`
}

// UnrestrictedUserEmail is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type UnrestrictedUserEmail struct {
	// AccountID is the The accountId of the user
	AccountID string `json:"accountId"`
	// Email is the The email of the user
	Email string `json:"email"`
}

// UpdateCustomFieldOption is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of the options to update for a custom field.
type UpdateCustomFieldOption struct {
	// Options is the Details of the options to update.
	Options []RenamedOption `json:"options"`
}

// UpdateScreenDetails is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of a screen.
type UpdateScreenDetails struct {
	// Description is the The description of the screen. The maximum length is 255 characters.
	Description string `json:"description"`
	// Name is the The name of the screen. The name must be unique. The maximum length is 255 characters.
	Name string `json:"name"`
}

// UpdateScreenSchemeDetails is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of a screen scheme.
type UpdateScreenSchemeDetails struct {
	// Description is the The description of the screen scheme. The maximum length is 255 characters.
	Description string `json:"description"`
	// Name is the The name of the screen scheme. The name must be unique. The maximum length is 255 characters.
	Name string `json:"name"`
	// Screens is the The IDs of the screens for the screen types of the screen scheme. Only screens used in classic projects are accepted.
	Screens struct {
		*UpdateScreenTypes `json:",inline"`
	} `json:"screens"`
}

// UpdateScreenTypes is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The IDs of the screens for the screen types of the screen scheme.
type UpdateScreenTypes struct {
	// Create is the The ID of the create screen. To remove the screen association, pass a null.
	Create string `json:"create"`
	// Default is the The ID of the default screen. When specified, must include a screen ID as a default screen is required.
	Default string `json:"default"`
	// Edit is the The ID of the edit screen. To remove the screen association, pass a null.
	Edit string `json:"edit"`
	// View is the The ID of the view screen. To remove the screen association, pass a null.
	View string `json:"view"`
}

// UpdateUserToGroupBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type UpdateUserToGroupBean struct {
	// AccountID is the The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
	AccountID string `json:"accountId"`
	// Name is the This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
	Name string `json:"name"`
}

// UpdatedProjectCategory is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A project category.
type UpdatedProjectCategory struct {
	// Description is the The name of the project category.
	Description string `json:"description"`
	// ID is the The ID of the project category.
	ID string `json:"id"`
	// Name is the The description of the project category.
	Name string `json:"name"`
	// Self is the The URL of the project category.
	Self string `json:"self"`
}

// User is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:
//
//  *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, `displayName` provides an indication and other parameters have default values or are blank (for example, email is blank).
//  *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, `accountId` returns *unknown* and all other parameters have fallback values.
//  *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
type User struct {
	// AccountID is the The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.
	AccountID string `json:"accountId"`
	// AccountType is the The user account type. Can take the following values:
	//
	//  *  `atlassian` regular Atlassian user account
	//  *  `app` system account used for Connect applications and OAuth to represent external systems
	//  *  `customer` Jira Service Desk account representing an external service desk
	AccountType string `json:"accountType"`
	// Active is the Whether the user is active.
	Active bool `json:"active"`
	// ApplicationRoles is the The application roles the user is assigned to.
	ApplicationRoles struct {
		*SimpleListWrapperApplicationRole `json:",inline"`
	} `json:"applicationRoles"`
	// AvatarUrls is the The avatars of the user.
	AvatarUrls struct {
		*AvatarUrlsBean `json:",inline"`
	} `json:"avatarUrls"`
	// DisplayName is the The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.
	DisplayName string `json:"displayName"`
	// EmailAddress is the The email address of the user. Depending on the user’s privacy setting, this may be returned as null.
	EmailAddress string `json:"emailAddress"`
	// Expand is the Expand options that include additional user details in the response.
	Expand string `json:"expand"`
	// Groups is the The groups that the user belongs to.
	Groups struct {
		*SimpleListWrapperGroupName `json:",inline"`
	} `json:"groups"`
	// Key is the This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
	Key string `json:"key"`
	// Locale is the The locale of the user. Depending on the user’s privacy setting, this may be returned as null.
	Locale string `json:"locale"`
	// Name is the This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
	Name string `json:"name"`
	// Self is the The URL of the user.
	Self string `json:"self"`
	// TimeZone is the The time zone specified in the user's profile. Depending on the user’s privacy setting, this may be returned as null.
	TimeZone string `json:"timeZone"`
}

// UserBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type UserBean struct {
	// AccountID is the The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
	AccountID string `json:"accountId"`
	// Active is the Whether the user is active.
	Active bool `json:"active"`
	// AvatarUrls is the The avatars of the user.
	AvatarUrls struct {
		*UserBeanAvatarUrls `json:",inline"`
	} `json:"avatarUrls"`
	// DisplayName is the The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.
	DisplayName string `json:"displayName"`
	// Key is the This property is deprecated in favor of `accountId` because of privacy changes. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
	// The key of the user.
	Key string `json:"key"`
	// Name is the This property is deprecated in favor of `accountId` because of privacy changes. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
	// The username of the user.
	Name string `json:"name"`
	// Self is the The URL of the user.
	Self string `json:"self"`
}

// UserBeanAvatarUrls is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type UserBeanAvatarUrls struct {
	// N16x16 is the The URL of the user's 16x16 pixel avatar.
	N16x16 string `json:"16x16"`
	// N24x24 is the The URL of the user's 24x24 pixel avatar.
	N24x24 string `json:"24x24"`
	// N32x32 is the The URL of the user's 32x32 pixel avatar.
	N32x32 string `json:"32x32"`
	// N48x48 is the The URL of the user's 48x48 pixel avatar.
	N48x48 string `json:"48x48"`
}

// UserDetails is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// User details permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:
//
//  *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, `displayName` provides an indication and other parameters have default values or are blank (for example, email is blank).
//  *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, `accountId` returns *unknown* and all other parameters have fallback values.
//  *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
type UserDetails struct {
	// AccountID is the The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
	AccountID string `json:"accountId"`
	// AccountType is the The type of account represented by this user. This will be one of 'atlassian' (normal users), 'app' (application user) or 'customer' (Jira Service Desk customer user)
	AccountType string `json:"accountType"`
	// Active is the Whether the user is active.
	Active bool `json:"active"`
	// AvatarUrls is the The avatars of the user.
	AvatarUrls struct {
		*AvatarUrlsBean `json:",inline"`
	} `json:"avatarUrls"`
	// DisplayName is the The display name of the user. Depending on the user’s privacy settings, this may return an alternative value.
	DisplayName string `json:"displayName"`
	// EmailAddress is the The email address of the user. Depending on the user’s privacy settings, this may be returned as null.
	EmailAddress string `json:"emailAddress"`
	// Key is the This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
	Key string `json:"key"`
	// Name is the This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
	Name string `json:"name"`
	// Self is the The URL of the user.
	Self string `json:"self"`
	// TimeZone is the The time zone specified in the user's profile. Depending on the user’s privacy settings, this may be returned as null.
	TimeZone string `json:"timeZone"`
}

// UserKey is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// List of user account IDs.
type UserKey struct {
	// AccountID is the The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Returns *unknown* if the record is deleted and corrupted, for example, as the result of a server import.
	AccountID string `json:"accountId"`
	// Key is the This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
	Key string `json:"key"`
}

// UserList is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A paginated list of users sharing the filter. This includes users that are members of the groups or can browse the projects that the filter is shared with.
type UserList struct {
	// EndIndex is the The index of the last item returned on the page.
	EndIndex int64 `json:"end-index"`
	// Items is the The list of items.
	Items []User `json:"items"`
	// MaxResults is the The maximum number of results that could be on the page.
	MaxResults int64 `json:"max-results"`
	// Size is the The number of items on the page.
	Size int64 `json:"size"`
	// StartIndex is the The index of the first item returned on the page.
	StartIndex int64 `json:"start-index"`
}

// UserMigrationBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type UserMigrationBean struct {
	AccountID string `json:"accountId"`
	Key       string `json:"key"`
	Username  string `json:"username"`
}

// UserPermission is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of a permission and its availability to a user.
type UserPermission struct {
	// DeprecatedKey is the Indicate whether the permission key is deprecated. Note that deprecated keys cannot be used in the `permissions parameter of Get my permissions. Deprecated keys are not returned by Get all permissions.`
	DeprecatedKey bool `json:"deprecatedKey"`
	// Description is the The description of the permission.
	Description string `json:"description"`
	// HavePermission is the Whether the permission is available to the user in the queried context.
	HavePermission bool `json:"havePermission"`
	// ID is the The ID of the permission. Either `id` or `key` must be specified. Use [Get all permissions](#api-rest-api-3-permissions-get) to get the list of permissions.
	ID string `json:"id"`
	// Key is the The key of the permission. Either `id` or `key` must be specified. Use [Get all permissions](#api-rest-api-3-permissions-get) to get the list of permissions.
	Key string `json:"key"`
	// Name is the The name of the permission.
	Name string `json:"name"`
	// Type is the The type of the permission.
	Type string `json:"type"`
}

// UserPickerUser is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A user found in a search.
type UserPickerUser struct {
	// AccountID is the The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
	AccountID string `json:"accountId"`
	// AvatarURL is the The avatar URL of the user.
	AvatarURL string `json:"avatarUrl"`
	// DisplayName is the The display name of the user. Depending on the user’s privacy setting, this may be returned as null.
	DisplayName string `json:"displayName"`
	// HTML is the The display name, email address, and key of the user with the matched query string highlighted with the HTML bold tag.
	HTML string `json:"html"`
	// Key is the This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
	Key string `json:"key"`
	// Name is the This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
	Name string `json:"name"`
}

// UserWriteBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type UserWriteBean struct {
	ApplicationKeys []string `json:"applicationKeys"`
	// DisplayName is the The display name for the user.
	DisplayName string `json:"displayName"`
	// EmailAddress is the The email address for the user.
	EmailAddress string `json:"emailAddress"`
	// Key is the The key for the user. When provided with `name`, overrides the value in `name` to set both `name` and `key`. This property is deprecated because of privacy changes. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
	Key string `json:"key"`
	// Name is the The username for the user. This property is deprecated because of privacy changes. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
	Name string `json:"name"`
	// Notification is the Sends the user an email confirmation that they have been added to Jira. Default is `false`.
	Notification string `json:"notification"`
	// Password is the A password for the user. If a password is not set, a random password is generated.
	Password string `json:"password"`
	// Self is the The URL of the user.
	Self string `json:"self"`
}

// ValueOperand is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// An operand that is a user-provided value.
type ValueOperand struct {
	// Value is the The operand value.
	Value string `json:"value"`
}

// Version is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about a project version.
type Version struct {
	// Archived is the Indicates that the version is archived. Optional when creating or updating a version.
	Archived bool `json:"archived"`
	// Description is the The description of the version. Optional when creating or updating a version.
	Description string `json:"description"`
	// Expand is the Use [expand](em>#expansion) to include additional information about version in the response. This parameter accepts a comma-separated list. Expand options include:
	//
	//  *  `operations` Returns the list of operations available for this version.
	//  *  `issuesstatus` Returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.
	//
	// Optional for create and update.
	Expand string `json:"expand"`
	// ID is the The ID of the version.
	ID string `json:"id"`
	// IssuesStatusForFixVersion is the If the expand option `issuesstatus` is used, returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.
	IssuesStatusForFixVersion struct {
		*VersionIssuesStatus `json:",inline"`
	} `json:"issuesStatusForFixVersion"`
	// MoveUnfixedIssuesTo is the The URL of the self link to the version to which all unfixed issues are moved when a version is released. Not applicable when creating a version. Optional when updating a version.
	MoveUnfixedIssuesTo string `json:"moveUnfixedIssuesTo"`
	// Name is the The unique name of the version. Required when creating a version. Optional when updating a version. The maximum length is 255 characters.
	Name string `json:"name"`
	// Operations is the If the expand option `operations` is used, returns the list of operations available for this version.
	Operations []SimpleLink `json:"operations"`
	// Overdue is the Indicates that the version is overdue.
	Overdue bool `json:"overdue"`
	// Project is the Deprecated. Use `projectId`.
	Project string `json:"project"`
	// ProjectID is the The ID of the project to which this version is attached. Required when creating a version. Not applicable when updating a version.
	ProjectID int64 `json:"projectId"`
	// ReleaseDate is the The release date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.
	ReleaseDate string `json:"releaseDate"`
	// Released is the Indicates that the version is released. If the version is released a request to release again is ignored. Not applicable when creating a version. Optional when updating a version.
	Released bool `json:"released"`
	// Self is the The URL of the version.
	Self string `json:"self"`
	// StartDate is the The start date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.
	StartDate string `json:"startDate"`
	// UserReleaseDate is the The date on which work on this version is expected to finish, expressed in the instance's *Day/Month/Year Format* date format.
	UserReleaseDate string `json:"userReleaseDate"`
	// UserStartDate is the The date on which work on this version is expected to start, expressed in the instance's *Day/Month/Year Format* date format.
	UserStartDate string `json:"userStartDate"`
}

// VersionIssueCounts is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Various counts of issues within a version.
type VersionIssueCounts struct {
	// CustomFieldUsage is the List of custom fields using the version.
	CustomFieldUsage []VersionUsageInCustomField `json:"customFieldUsage"`
	// IssueCountWithCustomFieldsShowingVersion is the Count of issues where a version custom field is set to the version.
	IssueCountWithCustomFieldsShowingVersion int64 `json:"issueCountWithCustomFieldsShowingVersion"`
	// IssuesAffectedCount is the Count of issues where the `affectedVersion` is set to the version.
	IssuesAffectedCount int64 `json:"issuesAffectedCount"`
	// IssuesFixedCount is the Count of issues where the `fixVersion` is set to the version.
	IssuesFixedCount int64 `json:"issuesFixedCount"`
	// Self is the The URL of these count details.
	Self string `json:"self"`
}

// VersionIssuesStatus is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Counts of the number of issues in various statuses.
type VersionIssuesStatus struct {
	// Done is the Count of issues with status *done*.
	Done int64 `json:"done"`
	// InProgress is the Count of issues with status *in progress*.
	InProgress int64 `json:"inProgress"`
	// ToDo is the Count of issues with status *to do*.
	ToDo int64 `json:"toDo"`
	// Unmapped is the Count of issues with a status other than *to do*, *in progress*, and *done*.
	Unmapped int64 `json:"unmapped"`
}

// VersionMoveBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type VersionMoveBean struct {
	// After is the The URL (self link) of the version after which to place the moved version. Cannot be used with `position`.
	After string `json:"after"`
	// Position is the An absolute position in which to place the moved version. Cannot be used with `after`.
	Position string `json:"position"`
}

// VersionUnresolvedIssuesCount is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Count of a version's unresolved issues.
type VersionUnresolvedIssuesCount struct {
	// IssuesCount is the Count of issues.
	IssuesCount int64 `json:"issuesCount"`
	// IssuesUnresolvedCount is the Count of unresolved issues.
	IssuesUnresolvedCount int64 `json:"issuesUnresolvedCount"`
	// Self is the The URL of these count details.
	Self string `json:"self"`
}

// VersionUsageInCustomField is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// List of custom fields using the version.
type VersionUsageInCustomField struct {
	// CustomFieldID is the The ID of the custom field.
	CustomFieldID int64 `json:"customFieldId"`
	// FieldName is the The name of the custom field.
	FieldName string `json:"fieldName"`
	// IssueCountWithVersionInCustomField is the Count of the issues where the custom field contains the version.
	IssueCountWithVersionInCustomField int64 `json:"issueCountWithVersionInCustomField"`
}

// Visibility is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The group or role to which this item is visible.
type Visibility struct {
	// Type is the Whether visibility of this item is restricted to a group or role.
	Type string `json:"type"`
	// Value is the The name of the group or role to which visibility of this item is restricted.
	Value string `json:"value"`
}

// Votes is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The details of votes on an issue.
type Votes struct {
	// HasVoted is the Whether the user making this request has voted on the issue.
	HasVoted bool `json:"hasVoted"`
	// Self is the The URL of these issue vote details.
	Self string `json:"self"`
	// Voters is the List of the users who have voted on this issue. An empty list is returned when the calling user doesn't have the *View voters and watchers* project permission.
	Voters []User `json:"voters"`
	// Votes is the The number of votes on the issue.
	Votes int64 `json:"votes"`
}

// Watchers is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The details of watchers on an issue.
type Watchers struct {
	// IsWatching is the Whether the calling user is watching this issue.
	IsWatching bool `json:"isWatching"`
	// Self is the The URL of these issue watcher details.
	Self string `json:"self"`
	// WatchCount is the The number of users watching this issue.
	WatchCount int64 `json:"watchCount"`
	// Watchers is the Details of the users watching this issue.
	Watchers []UserDetails `json:"watchers"`
}

// Webhook is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A webhook.
type Webhook struct {
	Events         []string `json:"events"`
	ExpirationDate int64    `json:"expirationDate"`
	// ID is the The ID of the webhook.
	ID int64 `json:"id"`
	// JqlFilter is the The JQL filter that specifies which issues the webhook is sent for.
	JqlFilter string `json:"jqlFilter"`
}

// WebhookDetails is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A list of webhooks.
type WebhookDetails struct {
	Events []string `json:"events"`
	// JqlFilter is the The JQL filter that specifies which issues the webhook is sent for. Only a subset of JQL can be used. The supported elements are:
	//
	//  *  Fields: `issueKey`, `project`, `issuetype`, `status`, `assignee`, `reporter`, `issue.property`, and `cf[id]` (for custom fields—only the epic label custom field is supported).
	//  *  Operators: `=`, `!=`, `IN`, and `NOT IN`.
	JqlFilter string `json:"jqlFilter"`
}

// WebhookRegistrationDetails is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of webhooks to register.
type WebhookRegistrationDetails struct {
	// URL is the The URL that specifies where to send the webhooks.
	URL string `json:"url"`
	// Webhooks is the A list of webhooks.
	Webhooks []WebhookDetails `json:"webhooks"`
}

// WebhooksExpirationDate is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// The date the newly refreshed webhooks expire.
type WebhooksExpirationDate struct {
	ExpirationDate int64 `json:"expirationDate"`
}

// Workflow is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about a workflow.
type Workflow struct {
	// Description is the The description of the workflow.
	Description string              `json:"description"`
	ID          PublishedWorkflowID `json:"id"`
	// Statuses is the The statuses of the workflow.
	Statuses []WorkflowStatus `json:"statuses"`
	// Transitions is the The transitions of the workflow.
	Transitions []Transition `json:"transitions"`
}

// WorkflowID is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Properties that identify a workflow.
type WorkflowID struct {
	// Draft is the Whether the workflow is in the draft state.
	Draft bool `json:"draft"`
	// Name is the The name of the workflow.
	Name string `json:"name"`
}

// WorkflowRules is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A collection of transition rules.
type WorkflowRules struct {
	// Conditions is the The workflow conditions.
	Conditions []WorkflowTransitionRule `json:"conditions"`
	// PostFunctions is the The workflow post functions.
	PostFunctions []WorkflowTransitionRule `json:"postFunctions"`
	// Validators is the The workflow validators.
	Validators []WorkflowTransitionRule `json:"validators"`
}

// WorkflowScheme is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about a workflow scheme.
type WorkflowScheme struct {
	// DefaultWorkflow is the The name of the default workflow for the workflow scheme. The default workflow has *All Unassigned Issue Types* assigned to it in Jira. If `defaultWorkflow` is not specified when creating a workflow scheme, it is set to *Jira Workflow (jira)*.
	DefaultWorkflow string `json:"defaultWorkflow"`
	// Description is the The description of the workflow scheme.
	Description string `json:"description"`
	// Draft is the Whether the workflow scheme is a draft or not.
	Draft bool `json:"draft"`
	// ID is the The ID of the workflow scheme.
	ID                int64                       `json:"id"`
	IssueTypeMappings string                      `json:"issueTypeMappings"`
	IssueTypes        map[string]IssueTypeDetails `json:"issueTypes"`
	// LastModified is the The date-time that the draft workflow scheme was last modified. A modification is a change to the issue type-project mappings only. This property does not apply to non-draft workflows.
	LastModified string `json:"lastModified"`
	// LastModifiedUser is the The user that last modified the draft workflow scheme. A modification is a change to the issue type-project mappings only. This property does not apply to non-draft workflows.
	LastModifiedUser struct {
		*User `json:",inline"`
	} `json:"lastModifiedUser"`
	// Name is the The name of the workflow scheme. The name must be unique. The maximum length is 255 characters. Required when creating a workflow scheme.
	Name string `json:"name"`
	// OriginalDefaultWorkflow is the For draft workflow schemes, this property is the name of the default workflow for the original workflow scheme. The default workflow has *All Unassigned Issue Types* assigned to it in Jira.
	OriginalDefaultWorkflow   string `json:"originalDefaultWorkflow"`
	OriginalIssueTypeMappings string `json:"originalIssueTypeMappings"`
	Self                      string `json:"self"`
	// UpdateDraftIfNeeded is the Whether to create or update a draft workflow scheme when updating an active workflow scheme. An active workflow scheme is a workflow scheme that is used by at least one project. The following examples show how this property works:
	//
	//  *  Update an active workflow scheme with `updateDraftIfNeeded` set to `true`: If a draft workflow scheme exists, it is updated. Otherwise, a draft workflow scheme is created.
	//  *  Update an active workflow scheme with `updateDraftIfNeeded` set to `false`: An error is returned, as active workflow schemes cannot be updated.
	//  *  Update an inactive workflow scheme with `updateDraftIfNeeded` set to `true`: The workflow scheme is updated, as inactive workflow schemes do not require drafts to update.
	//
	// Defaults to `false`.
	UpdateDraftIfNeeded bool `json:"updateDraftIfNeeded"`
}

// WorkflowSchemeAssociations is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A workflow scheme along with a list of projects that use it.
type WorkflowSchemeAssociations struct {
	ProjectIds []string `json:"projectIds"`
	// WorkflowScheme is the The workflow scheme.
	WorkflowScheme struct {
		*WorkflowScheme `json:",inline"`
	} `json:"workflowScheme"`
}

// WorkflowSchemeProjectAssociation is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// An associated workflow scheme and project.
type WorkflowSchemeProjectAssociation struct {
	// ProjectID is the The ID of the project.
	ProjectID string `json:"projectId"`
	// WorkflowSchemeID is the The ID of the workflow scheme.
	WorkflowSchemeID string `json:"workflowSchemeId"`
}

// WorkflowStatus is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of a workflow status.
type WorkflowStatus struct {
	// ID is the The ID of the issue status.
	ID string `json:"id"`
	// Name is the The name of the status in the workflow.
	Name       string                   `json:"name"`
	Properties WorkflowStatusProperties `json:"properties"`
}

// WorkflowStatusProperties is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Properties of a workflow status.
type WorkflowStatusProperties struct {
	// IssueEditable is the Whether issues are editable in this status.
	IssueEditable bool `json:"issueEditable"`
}

// WorkflowTransition is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A workflow transition.
type WorkflowTransition struct {
	// ID is the The transition ID.
	ID int64 `json:"id"`
	// Name is the The transition name.
	Name string `json:"name"`
}

// WorkflowTransitionProperty is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about the server Jira is running on.
type WorkflowTransitionProperty struct {
	// ID is the The ID of the transition property.
	ID string `json:"id"`
	// Key is the The key of the transition property. Also known as the name of the transition property.
	Key string `json:"key"`
	// Value is the The value of the transition property.
	Value string `json:"value"`
}

// WorkflowTransitionRule is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A workflow transition rule.
type WorkflowTransitionRule struct {
	// Configuration is the The configuration of the transition rule. This is currently returned only for some of the rule types. Availability of this property is subject to change.
	Configuration interface{} `json:"configuration"`
	// Type is the The type of the transition rule.
	Type string `json:"type"`
}

// WorkflowTransitionRules is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// A workflow with transition rules.
type WorkflowTransitionRules struct {
	// Conditions is the The list of conditions within the workflow.
	Conditions []ConnectWorkflowTransitionRule `json:"conditions"`
	// PostFunctions is the The list of post functions within the workflow.
	PostFunctions []ConnectWorkflowTransitionRule `json:"postFunctions"`
	// Validators is the The list of validators within the workflow.
	Validators []ConnectWorkflowTransitionRule `json:"validators"`
	WorkflowID WorkflowID                      `json:"workflowId"`
}

// WorkflowTransitionRulesUpdate is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details about a workflow configuration update request.
type WorkflowTransitionRulesUpdate struct {
	// Workflows is the The list of workflows with transition rules to update.
	Workflows []WorkflowTransitionRules `json:"workflows"`
}

// WorkflowTransitionRulesUpdateErrorDetails is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of any errors encountered while updating workflow transition rules for a workflow.
type WorkflowTransitionRulesUpdateErrorDetails struct {
	// RuleUpdateErrors is the A list of transition rule update errors, indexed by the transition rule ID. Any transition rule that appears here wasn't updated.
	RuleUpdateErrors []string `json:"ruleUpdateErrors"`
	// UpdateErrors is the An error specifying why the workflow update failed.
	UpdateErrors []string   `json:"updateErrors"`
	WorkflowID   WorkflowID `json:"workflowId"`
}

// WorkflowTransitionRulesUpdateErrors is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of any errors encountered while updating workflow transition rules.
type WorkflowTransitionRulesUpdateErrors struct {
	// UpdateResults is the A list of workflows.
	UpdateResults []WorkflowTransitionRulesUpdateErrorDetails `json:"updateResults"`
}

// Worklog is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
// Details of a worklog.
type Worklog struct {
	// Author is the Details of the user who created the worklog.
	Author struct {
		*UserDetails `json:",inline"`
	} `json:"author"`
	// Comment is the A comment about the worklog in [Atlassian Document Format](https://developer.atlassian.com/cloud/jira/platform/apis/document/structure/). Optional when creating or updating a worklog.
	Comment interface{} `json:"comment"`
	// Created is the The datetime on which the worklog was created.
	Created string `json:"created"`
	// ID is the The ID of the worklog record.
	ID string `json:"id"`
	// IssueID is the The ID of the issue this worklog is for.
	IssueID string `json:"issueId"`
	// Properties is the Details of properties for the worklog. Optional when creating or updating a worklog.
	Properties []EntityProperty `json:"properties"`
	// Self is the The URL of the worklog item.
	Self string `json:"self"`
	// Started is the The datetime on which the worklog effort was started. Required when creating a worklog. Optional when updating a worklog.
	Started string `json:"started"`
	// TimeSpent is the The time spent working on the issue as days (\#d), hours (\#h), or minutes (\#m or \#). Required when creating a worklog if `timeSpentSeconds` isn't provided. Optional when updating a worklog. Cannot be provided if `timeSpentSecond` is provided.
	TimeSpent string `json:"timeSpent"`
	// TimeSpentSeconds is the The time in seconds spent working on the issue. Required when creating a worklog if `timeSpent` isn't provided. Optional when updating a worklog. Cannot be provided if `timeSpent` is provided.
	TimeSpentSeconds int64 `json:"timeSpentSeconds"`
	// UpdateAuthor is the Details of the user who last updated the worklog.
	UpdateAuthor struct {
		*UserDetails `json:",inline"`
	} `json:"updateAuthor"`
	// Updated is the The datetime on which the worklog was last updated.
	Updated string `json:"updated"`
	// Visibility is the Details about any restrictions in the visibility of the worklog. Optional when creating or updating a worklog.
	Visibility struct {
		*Visibility `json:",inline"`
	} `json:"visibility"`
}

// WorklogIdsRequestBean is auto generated by github.com/perrito666/LAC from "generators/jira/jira/swagger-v3.v3.json" json file
//
type WorklogIdsRequestBean struct {
	IDs []int64 `json:"ids"`
}
